geom_point(size = 2) +
geom_smooth(aes(group = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black"),
#legend.position = "none",
legend.text = element_text(size = 12)) +
coord_cartesian(xlim = c(0, 20)) +
ylab(expression(paste("SOM (%)"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
legend2 <- get_legend(p6.SOM)
grid.arrange(g, legend, ncol = 2, widths = c(8, 1))
grid.arrange(g, legend2, ncol = 2, widths = c(8, 1))
sed.join %>%
filter(variable == "SOD") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(colour = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black"),
legend.text = element_text(size = 15)) +
coord_cartesian(xlim = c(0, 20)) +
ylab(expression(paste("SOD (", mu, "mol ", O[2], " ", m^-2, " ", h^-1, ")"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
sed.join %>%
filter(variable == "SOD") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(colour = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 20)) +
coord_cartesian(xlim = c(0, 20)) +
ylab(expression(paste("SOD (", mu, "mol ", O[2], " ", m^-2, " ", h^-1, ")"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
legend.plot <- sed.join %>%
filter(variable == "SOD") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(colour = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 20)) +
coord_cartesian(xlim = c(0, 20)) +
ylab(expression(paste("SOD (", mu, "mol ", O[2], " ", m^-2, " ", h^-1, ")"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
legend2 <- get_legend(legend.plot)
legend2 <- gtable_filter(ggplotGrob(legend.plot), "guide-box")
grid.newpage()
grid.arrange(g, legend2, ncol = 2, widths = c(8, 1))
grid.arrange(g, legend2, ncol = 2, widths = c(8, 2))
grid.arrange(g, legend2, ncol = 2, widths = c(9, 2))
grid.arrange(g, legend2, ncol = 2, widths = c(9, 1.5))
tiff("Figures\\Thesis\\RT-seasonal-sed-params-by-habitat", width = 350, height = 250, units = "mm", res = 300, compression = "lzw")
#Graph the bound plots and the legend using grid.arrange. Adjust the number of columns and widths accordingly.
grid.arrange(g, legend2, ncol = 2, widths = c(9, 1.5))
dev.off()
setwd("E:/R Markdown")
library("plyr")
library("dplyr")
library("car")
library("ggplot2")
library("ggpmisc")
library("lattice")
library("grid")
library("reshape2")
library("RColorBrewer")
library("gtable")
library("gridExtra")
library("cowplot")
source("functions.R")
annual.data <- read.csv("PRIMER\\raw\\annual-data_all-seasons_all-sites.csv", header = T, stringsAsFactors = F)
all.avgs <- read.csv("PRIMER\\raw\\all-data_annual-avg_all-sites.csv", header = T, stringsAsFactors = F)
spring <- read.csv("PRIMER\\raw\\all-data_spring15_all-sites.csv", header = T, stringsAsFactors = F)
sed.data <- read.csv("PRIMER\\raw\\sed-data_spring15_all-sites.csv", header = T, stringsAsFactors = F)
all.avgs.nona <- na.omit(all.avgs)
all.avgs.nona$Site <- factor(all.avgs.nona$Site, levels = c("IMS", "Carrot", "NOAA", "Army"))
all.avgs.nona$CoreName <- factor(all.avgs.nona$CoreName, levels = c("LO", "HO", "MM"))
all.avgs.nona$Habitat <- factor(all.avgs.nona$Habitat, levels = c("oyster", "marsh"))
sed.data$Site <- factor(sed.data$Site, levels = c("IMS", "Carrot", "NOAA", "Army"))
sed.data$CoreName <- factor(sed.data$CoreName, levels = c("LO", "HO", "LM", "MM", "HM", "Ref"))
sed.data$Habitat <- factor(sed.data$Habitat, levels = c("oyster", "marsh", "Ref"))
annual.data <- add.age(annual.data)
annual.data$Age <- as.numeric(annual.data$Age)
quad.formula <- y ~ poly(x,2)
#Melt the data to create 2 columns:parameter names and values
#To be used in below analysis
melted.annual <- melt(annual.data, measure.vars = c("O2conc", "SOD", "PercentOM", "PercentInundation", "NOxFlux", "NH3Flux", "N2Flux"))
#Get rid of NA values and percent inundation (b/c that wouldn't be expected to change w age)
melted.annual <- na.omit(melted.annual)
melted.annual <- melted.annual[!melted.annual$variable == "PercentInundation", ]
#Code from Adam to check that linear regression values are being calculated accurately
#LM check - linear
summary(lm(annual.data$SOD~annual.data$Age))
#LM check - quadratic
summary(lm(annual.data$O2conc~cbind(annual.data$Age,annual.data$Age^2)))
sed.data <- add.age(sed.data)
sed.data$Age <- as.numeric(sed.data$Age)
melted.sed <- melt(sed.data, measure.vars = c("PercentC", "PercentN", "CtoN", "BulkDensity", "SpringN2"))
all.avgs.nona <- add.age(all.avgs.nona)
all.avgs.nona$Age <- as.numeric(all.avgs.nona$Age)
melted.avgs <- melt(all.avgs.nona, measure.vars = c("Inundation", "PercentC", "PercentN", "CtoN", "PercentOM", "SOD", "O2conc", "BulkDensity", "N2Flux"))
annual.data %>%
filter(Season == "Summer") %>%
ggplot(aes(Age, N2Flux)) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
geom_point(size = 4) +
theme(panel.background = element_rect(fill = "white", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 28),
axis.title.y = element_text(margin = margin(r = 15), size = 28),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 20, colour = "black"),
axis.text.y = element_text(size = 20, colour = "black")) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 2) +
xlab("Restored age (years)") +
ylab(expression(paste("Average ", N[2], " flux (", mu, "mol N ", m^2, " ", h^-1, ")"))) +
coord_cartesian(ylim = c(-10, 120)) +
scale_y_continuous(breaks = seq(-20, 120, 20))
melted.annual2 <- melted.annual[!melted.annual$variable == "O2conc", ]
melted.annual2 <- melted.annual2[!melted.annual2$variable == "NOxFlux", ]
melted.annual2 <- melted.annual2[!melted.annual2$variable == "NH3Flux", ]
#The only sediment parameter that will be included in the regression graphs is bulk density
#Add a column for Season to the sediment parameters dataframe and populate it with Spring
#Rearrange columns so Season is 1st column per convention
melted.sed$Season <- c("Spring")
melted.sed2 <- melted.sed[, c("Season", "Site", "CoreName", "Habitat", "Age", "variable", "value")]
#Extract only bulk density values from the sediment df and join it to the other df
bulk.density <- melted.sed2[melted.sed2$variable == "BulkDensity", ]
sed.join <- full_join(melted.annual2, bulk.density)
#Reorder the variables for graph purposes and change the Ref label so they match
sed.join$variable <- factor(sed.join$variable, levels = c("SOD", "PercentOM", "BulkDensity", "N2Flux"))
sed.join$Habitat <- revalue(sed.join$Habitat, c("ref" = "Ref"))
sed.join$Habitat <- factor(sed.join$Habitat, c("oyster", "marsh", "Ref"))
sed.join %>%
filter(Season == "Summer") %>%
ggplot(aes(Age, value)) +
geom_point() +
facet_grid(variable ~ ., scales = "free_y") +
geom_smooth(method = "lm", formula = quad.formula, size = 1) +
stat_poly_eq(formula = quad.formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T, label.y.npc = "top") +
stat_fit_glance(method = "lm",
method.args = list(formula = quad.formula),
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
View(sed.join)
sed.join <- add.sandflat(sed.join)
sed.join <- set.factors.habitat(sed.join)
View(sed.join)
sed.join %>%
filter(variable == "SOD") %>%
filter(Season == "Summer") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
#axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black")) +
ylab(expression(paste("SOD (", mu, "mol ", O[2], " ", m^-2, " ", h^-1, ")")))
sed.join %>%
filter(variable == "PercentOM") %>%
filter(Season == "Summer") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
#axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black")) +
ylab(expression(paste("SOM (%)")))
sed.join %>%
filter(variable == "N2Flux") %>%
filter(Season == "Summer") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black")) +
xlab("Restored Age (years)") +
ylab(expression(paste(N[2], " flux (", mu, "mol N ", m^-2, " ", h^-1, ")")))
p9.SOD <- sed.join %>%
filter(variable == "SOD") %>%
filter(Season == "Summer") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
#axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black")) +
ylab(expression(paste("SOD (", mu, "mol ", O[2], " ", m^-2, " ", h^-1, ")")))
p10.SOM <- sed.join %>%
filter(variable == "PercentOM") %>%
filter(Season == "Summer") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
#axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black")) +
p11.N2 <- sed.join %>%
filter(variable == "N2Flux") %>%
filter(Season == "Summer") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black")) +
xlab("Restored Age (years)") +
ylab(expression(paste(N[2], " flux (", mu, "mol N ", m^-2, " ", h^-1, ")")))
p9.SOD <- sed.join %>%
filter(variable == "SOD") %>%
filter(Season == "Summer") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
#axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black")) +
ylab(expression(paste("SOD (", mu, "mol ", O[2], " ", m^-2, " ", h^-1, ")")))
p10.SOM <- sed.join %>%
filter(variable == "PercentOM") %>%
filter(Season == "Summer") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
#axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black")) +
sed.join %>%
filter(variable == "N2Flux") %>%
filter(Season == "Summer") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black")) +
xlab("Restored Age (years)") +
ylab(expression(paste(N[2], " flux (", mu, "mol N ", m^-2, " ", h^-1, ")")))
p11.N2 <- sed.join %>%
filter(variable == "N2Flux") %>%
filter(Season == "Summer") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black")) +
xlab("Restored Age (years)") +
ylab(expression(paste(N[2], " flux (", mu, "mol N ", m^-2, " ", h^-1, ")")))
grid.newpage()
grid.draw(rbind(ggplotGrob(p9.SOD), ggplotGrob(p10.SOM), gplotGrob(p11.N2), size = "last"))
grid.draw(rbind(ggplotGrob(p9.SOD), ggplotGrob(p10.SOM), gplotGrob(p11.N2), size = "last"))
p9.SOD <- sed.join %>%
filter(variable == "SOD") %>%
filter(Season == "Summer") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
#axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black")) +
ylab(expression(paste("SOD (", mu, "mol ", O[2], " ", m^-2, " ", h^-1, ")")))
p10.SOM <- sed.join %>%
filter(variable == "PercentOM") %>%
filter(Season == "Summer") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
#axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black")) +
ylab(expression(paste("SOM (%)")))
p11.N2 <- sed.join %>%
filter(variable == "N2Flux") %>%
filter(Season == "Summer") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black")) +
xlab("Restored Age (years)") +
ylab(expression(paste(N[2], " flux (", mu, "mol N ", m^-2, " ", h^-1, ")")))
grid.draw(rbind(ggplotGrob(p9.SOD), ggplotGrob(p10.SOM), ggplotGrob(p11.N2), size = "last"))
grid.newpage()
tiff("Figures\\Thesis\\RT-seasonal-sed-params", width = 350, height = 250, units = "mm", res = 300, compression = "lzw")
grid.draw(rbind(ggplotGrob(p9.SOD), ggplotGrob(p10.SOM), ggplotGrob(p11.N2), size = "last"))
dev.off()
grid.newpage()
tiff("Figures\\Thesis\\RT-seasonal-sed-params", width = 350, height = 250, units = "mm", res = 300, compression = "lzw")
grid.draw(rbind(ggplotGrob(p1.SOD), ggplotGrob(p2.SOM), ggplotGrob(p3.BD), ggplotGrob(p4.N2),
size = "last"))
dev.off()
p1.SOD <- sed.join %>%
filter(variable == "SOD") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
#axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black")) +
ylab(expression(paste("SOD (", mu, "mol ", O[2], " ", m^-2, " ", h^-1, ")")))
p2.SOM <- sed.join %>%
filter(variable == "PercentOM") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
#axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black")) +
ylab(expression(paste("SOM (%)")))
p3.BD <- sed.join %>%
filter(variable == "BulkDensity") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
#axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black")) +
ylab(expression(paste("Bulk Density (g ", cm^-3, ")")))
p4.N2 <- sed.join %>%
filter(variable == "N2Flux") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black")) +
xlab("Restored Age (years)") +
ylab(expression(paste(N[2], " flux (", mu, "mol N ", m^-2, " ", h^-1, ")")))
#Using the grid package to put them all together.
grid.newpage()
tiff("Figures\\Thesis\\RT-seasonal-sed-params", width = 350, height = 250, units = "mm", res = 300, compression = "lzw")
grid.draw(rbind(ggplotGrob(p1.SOD), ggplotGrob(p2.SOM), ggplotGrob(p3.BD), ggplotGrob(p4.N2),
size = "last"))
dev.off()
grid.draw(rbind(ggplotGrob(p9.SOD), ggplotGrob(p10.SOM), ggplotGrob(p11.N2), size = "last"))
grid.newpage()
grid.draw(rbind(ggplotGrob(p1.SOD), ggplotGrob(p2.SOM), ggplotGrob(p3.BD), ggplotGrob(p4.N2),
grid.draw(rbind(ggplotGrob(p1.SOD), ggplotGrob(p2.SOM), ggplotGrob(p3.BD), ggplotGrob(p4.N2),
size = "last"))
grid.newpage()
tiff("Figures\\Thesis\\RT-sed-params-summer-only", width = 350, height = 250, units = "mm", res = 300, compression = "lzw")
grid.draw(rbind(ggplotGrob(p9.SOD), ggplotGrob(p10.SOM), ggplotGrob(p11.N2), size = "last"))
dev.off()
