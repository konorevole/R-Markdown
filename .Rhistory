str(basic.N2)
basic.model <- lm(N2Flux ~ Season + Site + CoreName, data = basic.N2)
resids.basic <- residuals(basic.model)
qqnorm(resids.basic)
qqline(resids.basic)
shapiro.test(resids.basic)
leveneTest(N2Flux ~ Season * Site * CoreName, data = basic.N2)
anova3 <- aov(N2Flux ~ Season + Site + CoreName, data = basic.N2)
summary(anova3)
shapiro.test(resids.basic)
chl.all <- read.csv("chlorophyll//clean//chl-clean-orig-habitats_all-seasons_all-sites.csv", header = T)
chl.basic <- read.csv("chlorophyll//clean//chl-clean-noLoHi_all-seasons_all-sites.csv", header = T)
chl.all <- set.factors(chl.all)
chl.all$Habitat <- factor(chl.all$Habitat, levels = c("oyster", "marsh", "Ref", "LoRef", "HiRef"))
chl.basic$Season <- factor(chl.basic$Season, levels = c("Summer", "Fall", "Winter", "Spring", "Summer15"))
chl.basic$Site <- factor(chl.basic$Site, levels = c("IMS", "Carrot", "NOAA", "Army"))
chl.basic$CoreName <- factor(chl.basic$CoreName, levels = c("LO", "HO", "LM", "MM", "HM", "Ref"))
#Creating dataframes averaging the observations and calculating other summary stats useful for graphing
chl.all.avg <- ddply(chl.all, c("Season", "Site", "CoreName"), summarise,
avg.chl = mean(chla_conc),
N = length(chla_conc),
stdev = sd(chla_conc),
SE = stdev / sqrt(N))
chl.basic.avg <- ddply(chl.basic, c("Season", "Site", "CoreName"), summarise,
avg.chl = mean(chla_conc),
N = length(chla_conc),
stdev = sd(chla_conc),
SE = stdev / sqrt(N))
View(basic.N2)
mainmod2 <- lm(avg.chl ~ Season + CoreName, data = chl.main.avgs)
main2res <- residuals(mainmod2)
qqnorm(main2res)
qqline(main2res)
#Checking for normality OF RESIDUALS (passes)
#Heterosked passes when looking at Season & Core Name as multiple independent variables... not sure what this means??
shapiro.test(main2res)
leveneTest(avg.chl ~ Season * CoreName, data = chl.main.avgs)
chl.main.avgs <- chl.basic.avg[!chl.basic.avg$Season == "Summer15", ]
mainmod2 <- lm(avg.chl ~ Season + CoreName, data = chl.main.avgs)
main2res <- residuals(mainmod2)
qqnorm(main2res)
qqline(main2res)
#Checking for normality OF RESIDUALS (passes)
#Heterosked passes when looking at Season & Core Name as multiple independent variables... not sure what this means??
shapiro.test(main2res)
leveneTest(avg.chl ~ Season * CoreName, data = chl.main.avgs)
basic.model2 <- lm(N2Flux ~ Season + Site, data = basic.N2)
resids.basic2 <- residuals(basic.model2)
qqnorm(resids.basic2)
qqline(resids.basic2)
shapiro.test(resids.basic2)
leveneTest(N2Flux ~ Season * Site, data = basic.N2)
positive.N2 <- mutate(basic.N2,
PosN2 = N2Flux + 21)
#Create a log-likelihood graph using a command from the MASS package
bctrans <- boxcox(PosN2 ~ Age, data = positive.N2,
lambda = seq(0, 1, by = 0.1))
#Identify the maximum likelihood value
which.max(bctrans$y)
#Use that maximum likelihood value (from the y axis) to determine the associated lambda (on the x axis)
bctrans$x[which.max(bctrans$y)]
#Take the variable to the power of the lambda to perform the transformation!
BC.N2 <- mutate(positive.N2,
N2BoxCox = (((PosN2 ^ 0.454) - 1) / 0.454))
str(BC.N2)
qqnorm(main2res)
qqline(main2res)
shapiro.test(main2res)
leveneTest(avg.chl ~ Season * CoreName, data = chl.main.avgs)
chl.main.avgs %>%
ggplot(aes(CoreName, avg.chl, colour = Season)) +
geom_boxplot()
anova2 <- aov(avg.chl ~ Season + CoreName, data = chl.main.avgs)
summary(anova2)
chl.all.avg %>%
filter(CoreName == "HO" | CoreName == "LO") %>%
ggplot(aes(CoreName, avg.chl, fill = Season)) +
geom_bar(stat = "identity", position = "dodge") #+
chl.all %>%
ggplot(aes(Habitat, chla_conc, fill = CoreName)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge")
summary(anova3)
shapiro.test(resids.basic)
shapiro.test(resids.basic2)
chl.summer <- chl.all.avg %>%
filter(Season == "Summer" | Season == "Summer15") %>%
filter(CoreName == "LO" | CoreName == "HO" | CoreName == "MM")
chl.summer %>%
ggplot(aes(Season, avg.chl, fill = CoreName)) +
facet_grid(Site ~ .) +
geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
geom_errorbar(aes(group = CoreName, ymin = avg.chl - SE, ymax = avg.chl + SE),
width = 0.2, position = position_dodge(width = 0.9))
ggplot(chl.summer, aes(Season, avg.chl, fill = Site)) +
geom_bar(stat = "identity", position = "dodge")
site.model <- lm(avg ~ Season * Site, data = chl.main.avgs)
site.model <- lm(avg.chl ~ Season * Site, data = chl.main.avgs)
qqnorm(resids.site)
qqline(resids.site)
resids.site <- residuals(site.model)
qqnorm(resids.site)
qqline(resids.site)
shapiro.test(resids.site)
leveneTest(avg.chl ~ Season + Site, data = chl.main.avgs)
leveneTest(avg.chl ~ Season * Site, data = chl.main.avgs)
site.anova <- aov(avg.chl ~ Season * Site, data = chl.main.avgs)
summary(site.anova)
chl.main.avgs %>%
ggplot(aes(avg.chl, Site, fill = Season)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge")
chl.main.avgs %>%
ggplot(aes(Site, avg.chl, fill = Season)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge")
chl.main.avgs %>%
ggplot(aes(Site, avg.chl, fill = Season)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge") +
facet_grid(CoreName ~ .)
chl.main.avgs %>%
ggplot(aes(Site, avg.chl, fill = Season)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge") #+
str(chl.main.avgs)
chl.main.habitat <- add.habitat(chl.main.avgs)
chl.main.habitat$Habitat <- factor(chl.main.habitat$Habitat, levels = c("oyster", "marsh", "Ref"))
chl.main.habitat %>%
ggplot(aes(Site, avg.chl, fill = Season)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge") +
facet_grid(Habitat ~ .)
str(BC.model)
str(BC.N2)
BC.model <- lm(N2BoxCox ~ Season * Site * CoreName, data = BC.N2)
BC.resids <- residuals(BC.model)
qqnorm(BC.resids)
qqline(BC.resids)
shapiro.test(BC.resids)
?shapiro.test
hist(BC.N2$N2BoxCox)
qqnorm(BC.N2$N2BoxCox)
qqline(BC.N2$N2BoxCox)
plot(BC.N2$N2BoxCox)
leveneTest(N2BoxCox ~ Habitat, BC.N2)
View(BC.N2)
BC.model <- lm(N2BoxCox ~ Season + Site + CoreName, data = BC.N2)
BC.resids <- residuals(BC.model)
qqnorm(BC.resids)
qqline(BC.resids)
shapiro.test(BC.resids)
basic.model <- lm(N2Flux ~ Season + Site + CoreName, data = basic.N2)
shapiro.test(resids.basic)
shapiro.test(resids.basic)
leveneTest(N2Flux ~ Season * Site * CoreName, data = basic.N2)
shapiro.test(resids.basic2)
leveneTest(N2Flux ~ Season * Site, data = basic.N2)
basic.model2 <- lm(N2Flux ~ Season + Site, data = basic.N2)
shapiro.test(resids.basic2)
resids.basic2 <- residuals(basic.model2)
qqnorm(resids.basic2)
qqline(resids.basic2)
shapiro.test(resids.basic2)
leveneTest(N2Flux ~ Season * Site * CoreName, data = basic.N2)
shapiro.test(resids.basic2)
leveneTest(N2Flux ~ Season * Site, data = basic.N2)
BC.model <- lm(N2BoxCox ~ Season + Site + CoreName, data = BC.N2)
BC.resids <- residuals(BC.model)
qqnorm(BC.resids)
qqline(BC.resids)
shapiro.test(BC.resids)
str(BC.resids)
str(BC.N2)
leveneTest(N2Flux ~ Season * Site * CoreName, data = BC.N2)
BC.model3 <- lm(N2BoxCox ~ Season + Site + CoreName, data = BC.N2)
BC.resids3 <- residuals(BC.model3)
qqnorm(BC.resids3)
qqline(BC.resids3)
shapiro.test(BC.resids3)
BC.model2 <- lm(N2BoxCox ~ Season + Site, data = BC.N2)
BC.resids2 <- residuals(BC.model2)
qqnorm(BC.resids2)
qqline(BC.resids2)
shapiro.test(BC.resids2)
indep.anova <- aov(N2Flux ~ Season + Site, data = BC.N2)
summary(indep.anova)
interact2 <- aov(N2Flux ~ Site * Season, data = BC.N2)
summary(interact2)
basic.model2 <- lm(N2Flux ~ Season * Site, data = basic.N2)
resids.basic2 <- residuals(basic.model2)
qqnorm(resids.basic2)
qqline(resids.basic2)
shapiro.test(resids.basic2)
basic.model2 <- lm(N2Flux ~ Season + Site, data = basic.N2)
resids.basic2 <- residuals(basic.model2)
shapiro.test(resids.basic2)
basic.model <- lm(N2Flux ~ Season * Site * CoreName, data = basic.N2)
resids.basic <- residuals(basic.model)
qqnorm(resids.basic)
qqline(resids.basic)
shapiro.test(resids.basic)
leveneTest(N2Flux ~ Season * Site * CoreName, data = basic.N2)
basic.model2 <- lm(N2Flux ~ Season * Site, data = basic.N2)
resids.basic2 <- residuals(basic.model2)
qqnorm(resids.basic2)
qqline(resids.basic2)
shapiro.test(resids.basic2)
leveneTest(N2Flux ~ Season * Site, data = basic.N2)
BC.model3 <- lm(N2BoxCox ~ Season * Site * CoreName, data = BC.N2)
BC.resids3 <- residuals(BC.model3)
qqnorm(BC.resids3)
qqline(BC.resids3)
shapiro.test(BC.resids3)
leveneTest(N2Flux ~ Season * Site * CoreName, data = BC.N2)
BC.model3 <- lm(N2BoxCox ~ Season + Site + CoreName, data = BC.N2)
BC.resids3 <- residuals(BC.model3)
shapiro.test(BC.resids3)
?lm
BC.model2 <- lm(N2BoxCox ~ Season * Site, data = BC.N2)
BC.resids2 <- residuals(BC.model2)
shapiro.test(BC.resids2)
qqnorm(BC.resids2)
qqline(BC.resids2)
BC.model32 <- lm(N2BoxCox ~ Season + Site + CoreName + Season * Site * CoreName, data = BC.N2)
shapiro.test(residuals(BC.model32))
interact.anova <- aov(N2Flux ~  Habitat * Site * Season, data = BC.N2)
summary(interact.anova)
interact2 <- aov(N2Flux ~ Site * Season, data = BC.N2)
summary(interact2)
indep.anova <- aov(N2Flux ~ Season + Site, data = BC.N2)
summary(indep.anova)
shapiro.test(BC.resids2)
leveneTest(N2Flux ~ Season * Site * CoreName, data = BC.N2)
leveneTest(N2Flux ~ Season + Site + CoreName, data = BC.N2)
leveneTest(N2Flux ~ Season * Site * CoreName, data = BC.N2)
BC.model2 <- lm(N2BoxCox ~ Season + Site, data = BC.N2)
BC.resids2 <- residuals(BC.model2)
shapiro.test(BC.resids2)
BC.model2 <- lm(N2BoxCox ~ Season * Site, data = BC.N2)
BC.resids2 <- residuals(BC.model2)
shapiro.test(BC.resids2)
interactx <- aov(N2BoxCox ~ Site * Season, data = BC.N2)
summary(interactx)
summary(interact2)
TukeyHSD(interactx)
BC.model3 <- lm(N2BoxCox ~ Season * Site * CoreName, data = BC.N2)
BC.resids3 <- residuals(BC.model3)
shapiro.test(BC.resids3)
BC.model3 <- lm(N2BoxCox ~ Season + Site + CoreName, data = BC.N2)
BC.resids3 <- residuals(BC.model3)
shapiro.test(BC.resids3)
shapiro.test(residuals(BC.season.model))
BC.season.model <- lm(N2BoxCox ~ Season, data = BC.N2)
shapiro.test(residuals(BC.season.model))
indep.anova <- aov(N2BoxCox ~ Season + Site, data = BC.N2)
summary(indep.anova)
interact.anova <- aov(N2BoxCox ~  Habitat * Site * Season, data = BC.N2)
summary(interact.anova)
interact2 <- aov(N2BoxCox ~ Site * Season, data = BC.N2)
summary(interact2)
nested.anova <- aov(N2BoxCox ~ (Season + Site) / Habitat, data = BC.N2)
summary(nested.anova)
BC.site.model <- lm(N2BoxCox ~ Site, data = BC.N2)
shapiro.test(residuals(BC.site.model))
BC.model3 <- lm(N2BoxCox ~ Season + Site + Habitat, data = BC.N2)
BC.resids3 <- residuals(BC.model3)
qqnorm(BC.resids3)
qqline(BC.resids3)
shapiro.test(BC.resids3)
leveneTest(N2Flux ~ Season * Site * Habitat, data = BC.N2)
leveneTest(N2Flux ~ Season * Site * Habitat, data = BC.N2)
leveneTest(N2Flux ~ Season * Site * CoreName, data = BC.N2)
leveneTest(N2BoxCox ~ Season * Site * CoreName, data = BC.N2)
leveneTest(N2BoxCox ~ Season * Site * Habitat, data = BC.N2)
leveneTest(N2BoxCox ~ Season * Site * Habitat, data = BC.N2)
shapiro.test(BC.resids2)
BC.model2 <- lm(N2BoxCox ~ Season + Site, data = BC.N2)
shapiro.test(BC.resids2)
BC.resids2 <- residuals(BC.model2)
shapiro.test(BC.resids2)
BC.site.model <- lm(N2BoxCox ~ Site, data = BC.N2)
shapiro.test(residuals(BC.site.model))
BC.model2 <- lm(N2BoxCox ~ Season * Site, data = BC.N2)
BC.resids2 <- residuals(BC.model2)
shapiro.test(BC.resids2)
leveneTest(N2BoxCox ~ Season * Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season * Site * Habitat, data = BC.N2)
leveneTest(N2BoxCox ~ Season * Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season + Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season * Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season * Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season + Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season * Site, data = BC.N2)
BC.model2 <- lm(N2BoxCox ~ Season * Site, data = BC.N2)
BC.resids2 <- residuals(BC.model2)
qqnorm(BC.resids2)
qqline(BC.resids2)
shapiro.test(BC.resids2)
leveneTest(N2BoxCox ~ Season * Site, data = BC.N2)
BC.model3 <- lm(N2BoxCox ~ Season * Site * Habitat, data = BC.N2)
BC.resids3 <- residuals(BC.model3)
shapiro.test(BC.resids3)
leveneTest(N2BoxCox ~ Season * Site * Habitat, data = BC.N2)
BC.model3 <- lm(N2BoxCox ~ Season * Site * Habitat, data = BC.N2)
BC.resids3 <- residuals(BC.model3)
qqnorm(BC.resids3)
qqline(BC.resids3)
shapiro.test(BC.resids3)
leveneTest(N2BoxCox ~ Season * Site * Habitat, data = BC.N2)
BC.model2 <- lm(N2BoxCox ~ Season * Site, data = BC.N2)
BC.resids2 <- residuals(BC.model2)
qqnorm(BC.resids2)
qqline(BC.resids2)
shapiro.test(BC.resids2)
leveneTest(N2BoxCox ~ Season * Site, data = BC.N2)
shapiro.test(residuals(BC.site.model))
interact.anova <- aov(N2BoxCox ~  Habitat * Site * Season, data = BC.N2)
summary(interact.anova)
summary(interact2)
leveneTest(N2BoxCox ~ Season * Site, data = BC.N2)
qqnorm(BC.resids2)
qqline(BC.resids2)
shapiro.test(residuals(BC.season.model))
shapiro.test(residuals(BC.site.model))
leveneTest(N2BoxCox ~ Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season, data = BC.N2)
boxplot(Site, N2BoxCox, data = BC.N2)
ggplot(BC.N2, aes(Site, N2BoxCox)) + geom_boxplot()
ggplot(BC.N2, aes(Season, N2BoxCox)) + geom_boxplot()
ggplot(BC.N2, aes(Site, N2BoxCox)) + geom_boxplot()
leveneTest(N2BoxCox ~ Season * Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season * Site * Habitat, data = BC.N2)
?leveneTest
leveneTest(N2BoxCox ~ Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season, data = BC.N2)
leveneTest(N2BoxCox ~ Season * Site, data = BC.N2)
shapiro.test(BC.resids2)
BC.season.model <- lm(N2BoxCox ~ Season, data = BC.N2)
shapiro.test(residuals(BC.season.model))
BC.site.model <- lm(N2BoxCox ~ Site, data = BC.N2)
shapiro.test(residuals(BC.site.model))
library(plyr)
library(dplyr)
library(ggplot2)
library(ggpmisc)
library(lmtest)
library(car)
library(MASS)
source("functions.R")
all.N2 <- read.csv("N2-flux\\clean\\N2-flux-by-core_with-summer15.csv", header = T, stringsAsFactors = F)
DNE <- read.csv("DNE\\clean\\DNE-clean_no-summer15_all-sites.csv", header = T, stringsAsFactors = F)
#Uses basic factor settings to input NA for Lo/Hi Ref and Summer 2015 cores
all.N2 <- set.factors.basic(all.N2)
all.N2$Age <- as.numeric(all.N2$Age)
all.N2$Habitat <- factor(all.N2$Habitat, levels = c("oyster", "marsh", "Ref"))
#Eliminate Lo/Hi Ref and Summer 2015 by getting rid of NAs
basic.N2 <- na.omit(all.N2)
DNE <- set.factors.basic(DNE)
DNE <- na.omit(DNE)
positive.N2 <- mutate(basic.N2,
PosN2 = N2Flux + 21)
#Create a log-likelihood graph using a command from the MASS package
bctrans <- boxcox(PosN2 ~ Age, data = positive.N2,
lambda = seq(0, 1, by = 0.1))
#Identify the maximum likelihood value
which.max(bctrans$y)
#Use that maximum likelihood value (from the y axis) to determine the associated lambda (on the x axis)
bctrans$x[which.max(bctrans$y)]
#Take the variable to the power of the lambda to perform the transformation!
BC.N2 <- mutate(positive.N2,
N2BoxCox = (((PosN2 ^ 0.454) - 1) / 0.454))
bartlett.test(N2BoxCox ~ Season * Site, BC.N2)
bartlett.test(N2BoxCox ~ Season * Site, data = BC.N2)
bartlett.test(N2BoxCox ~ Season + Site, data = BC.N2)
bartlett.test(N2BoxCox ~ Season, data = BC.N2)
boxplot(N2BoxCox ~ Site + Season, data = BC.N2)
leveneTest(N2BoxCox ~ Season * Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season + Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season * Site, data = BC.N2)
setwd("E:/R Markdown")
library(plyr)
library(dplyr)
library(ggplot2)
library(ggpmisc)
library(lmtest)
library(car)
library(MASS)
source("functions.R")
library(plyr)
library(dplyr)
library(ggplot2)
library(ggpmisc)
library(lmtest)
library(car)
library(MASS)
source("functions.R")
all.N2 <- read.csv("N2-flux\\clean\\N2-flux-by-core_with-summer15.csv", header = T, stringsAsFactors = F)
DNE <- read.csv("DNE\\clean\\DNE-clean_no-summer15_all-sites.csv", header = T, stringsAsFactors = F)
#Uses basic factor settings to input NA for Lo/Hi Ref and Summer 2015 cores
all.N2 <- set.factors.basic(all.N2)
all.N2$Age <- as.numeric(all.N2$Age)
all.N2$Habitat <- factor(all.N2$Habitat, levels = c("oyster", "marsh", "Ref"))
#Eliminate Lo/Hi Ref and Summer 2015 by getting rid of NAs
basic.N2 <- na.omit(all.N2)
DNE <- set.factors.basic(DNE)
DNE <- na.omit(DNE)
#Start by finding the optimal value of lambda
#Create a column with positive values of N2 by adding 21 to each flux
positive.N2 <- mutate(basic.N2,
PosN2 = N2Flux + 21)
#Create a log-likelihood graph using a command from the MASS package
bctrans <- boxcox(PosN2 ~ Age, data = positive.N2,
lambda = seq(0, 1, by = 0.1))
#Identify the maximum likelihood value
which.max(bctrans$y)
#Use that maximum likelihood value (from the y axis) to determine the associated lambda (on the x axis)
bctrans$x[which.max(bctrans$y)]
#Take the variable to the power of the lambda to perform the transformation!
BC.N2 <- mutate(positive.N2,
N2BoxCox = (((PosN2 ^ 0.454) - 1) / 0.454))
#Calculate transformed N2 flux values by core type
BC.N2.type <- ddply(BC.N2, c("Season", "Site", "CoreName", "Habitat", "Age"), summarise,
Avg_N2BoxCox = mean(N2BoxCox))
kruskal.test(N2BoxCox ~ Season * Site, data = BC.N2)
?kruskal.test
kruskal.test(N2BoxCox ~ Season, data = BC.N2)
kruskal.test(N2BoxCox ~ Site, data = BC.N2)
kruskal.test(N2BoxCox ~ Habitat, data = BC.N2)
leveneTest(N2BoxCox ~ Season * Site * Habitat, data = BC.N2)
leveneTest(N2BoxCox ~ Season * Site, data = BC.N2)
leveneTest(N2BoxCox ~ Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season, data = BC.N2)
ggplot(BC.N2, aes(Site, N2BoxCox)) + geom_boxplot()
ggplot(BC.N2, aes(Season, N2BoxCox)) + geom_boxplot()
ggplot(BC.N2, aes(Site, N2BoxCox)) + geom_boxplot()
boxplot(N2BoxCox ~ Site + Season, data = BC.N2)
boxplot(N2BoxCox ~ Site * Season, data = BC.N2)
boxplot(N2BoxCox ~ Site * Season, data = BC.N2)
BC.model2 <- lm(N2BoxCox ~ Season * Site, data = BC.N2)
BC.resids2 <- residuals(BC.model2)
qqnorm(BC.resids2)
qqline(BC.resids2)
shapiro.test(BC.resids2)
leveneTest(N2BoxCox ~ Season * Site, data = BC.N2)
BC.season.model <- lm(N2BoxCox ~ Season, data = BC.N2)
shapiro.test(residuals(BC.season.model))
BC.site.model <- lm(N2BoxCox ~ Site, data = BC.N2)
shapiro.test(residuals(BC.site.model))
ggplot(BC.N2, aes(Site, N2BoxCox)) + geom_boxplot()
interact2 <- aov(N2BoxCox ~ Site * Season, data = BC.N2)
summary(interact2)
leveneTest(N2BoxCox ~ Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season + Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season * Site, data = BC.N2)
boxplot(N2BoxCox ~ Site * Season, data = BC.N2)
ggplot(BC.N2, aes(Site, N2BoxCox)) + geom_boxplot()
str(all.N2)
ggplot(all.N2, aes(Site, N2Flux)) + geom_boxplot()
ggplot(all.N2, aes(Season, N2Flux)) + geom_boxplot()
boxplot(N2Flux ~ Site * Season, data = all.N2)
leveneTest(N2Flux ~ Site * Season, data = all.N2)
leveneTest(N2Flux ~ Site data = all.N2)
leveneTest(N2Flux ~ Site, data = all.N2)
leveneTest(N2Flux ~ Season, data = all.N2)
ggplot(all.N2, aes(Season, N2Flux)) + geom_boxplot()
View(basic.N2)
ggplot(basic.N2, aes(Site, N2Flux)) + geom_boxplot()
ggplot(basic.N2, aes(Season, N2Flux)) + geom_boxplot()
boxplot(N2Flux ~ Site * Season, data = basic.N2)
leveneTest(N2Flux ~ Season, data = basic.N2)
leveneTest(N2Flux ~ Site, data = basic.N2)
leveneTest(N2Flux ~ Site * Season, data = basic.N2)
leveneTest(N2Flux ~ Season, data = basic.N2)
ggplot(basic.N2, aes(Season, N2Flux)) + geom_boxplot()
boxplot(N2Flux ~ Site * Season, data = basic.N2)
ggplot(basic.N2, aes(Season, N2Flux)) + geom_boxplot()
ggplot(basic.N2, aes(Site, N2Flux)) + geom_boxplot()
View(BC.N2)
ggplot(BC.N2, aes(Site, N2BoxCox)) + geom_boxplot()
leveneTest(N2BoxCox ~ Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season, data = BC.N2)
View(BC.N2.type)
hist(BC.N2$N2BoxCox)
qqnorm(BC.N2$N2BoxCox)
qqline(BC.N2$N2BoxCox)
plot(BC.N2$N2BoxCox)
leveneTest(N2Flux ~ Season, data = basic.N2)
leveneTest(N2Flux ~ Site, data = basic.N2)
leveneTest(N2Flux ~ Site * Season, data = basic.N2)
leveneTest(N2BoxCox ~ Site, data = BC.N2)
leveneTest(N2BoxCox ~ Season, data = BC.N2)
ggplot(BC.N2, aes(Site, N2BoxCox)) + geom_boxplot()
ggplot(BC.N2, aes(Season, N2BoxCox)) + geom_boxplot()
boxplot(N2BoxCox ~ Site * Season, data = BC.N2)
BC.season.model <- lm(N2BoxCox ~ Season, data = BC.N2)
shapiro.test(residuals(BC.season.model))
bartlett.test(N2BoxCox ~ Season, data = BC.N2)
leveneTest(N2Flux ~ Site * Season, data = basic.N2)
leveneTest(N2Flux ~ Site, data = basic.N2)
leveneTest(N2Flux ~ Season, data = basic.N2)
habitat.anova <- aov(N2BoxCox ~ Habitat, data = BC.N2)
summary(habitat.anova)
boxplot(N2BoxCox ~ Site * Season * Habitat, data = BC.N2)
BC.habitat.model <- lm(N2BoxCox ~ Habitat, data = BC.N2)
shapiro.test(residuals(BC.habitat.model))
leveneTest(N2BoxCox ~ Habitat, data = BC.N2)
summary(interact.anova)
interact.anova <- aov(N2BoxCox ~  Habitat * Site * Season, data = BC.N2)
summary(interact.anova)
summary(interact2)
TukeyHSD(interact2)
View(BC.N2)
shapiro.test(residuals(BC.season.model))
shapiro.test(residuals(BC.site.model))
shapiro.test(BC.resids2)
qqnorm(BC.resids2)
qqline(BC.resids2)
