grid.arrange(p5.SOD, p6.SOM, p7.BD, p8.N2, legend, ncol = 2, widths = c(8, 2))
grid.arrange(p5.SOD, p6.SOM, p7.BD, p8.N2, legend, ncol = 2, nrow = 4, widths = c(8, 2))
grid.arrange(p5.SOD, p6.SOM, p7.BD, p8.N2, blankPlot, legend, blankPlot, blankPlot, ncol = 2, nrow = 4, widths = c(8, 2))
blankPlot <- ggplot() + geom_blank(aes(1,1))
ggplot() + geom_blank(aes(1,1))
blankPlot <- ggplot() + geom_blank(aes(1,1)) + cowplot::theme_nothing()
install.packages("cowplot")
library("cowplot")
blankPlot <- ggplot() + geom_blank(aes(1,1)) + theme_nothing()
blankPlot <- ggplot() + geom_blank(aes(1,1)) + theme_nothing()
ggplot() + geom_blank(aes(1,1)) + theme_nothing()
grid.arrange(p5.SOD, p6.SOM, p7.BD, p8.N2, blankPlot, legend, blankPlot, blankPlot, ncol = 2, nrow = 4, widths = c(8, 2))
grid.arrange(p5.SOD, p6.SOM, p7.BD, p8.N2, blankPlot, legend, blankPlot, blankPlot, ncol = 2, nrow = 4)
grid.arrange(p5.SOD, blankPlot, p6.SOM, blankPlot, p7.BD, legend, p8.N2, blankPlot, ncol = 2, nrow = 4)
grid.newpage()
grid.arrange(p5.SOD, blankPlot, p6.SOM, blankPlot, p7.BD, legend, p8.N2, blankPlot, ncol = 2, nrow = 4)
grid.arrange(p5.SOD, blankPlot, p6.SOM, blankPlot, p7.BD, legend, p8.N2, blankPlot, ncol = 2, nrow = 4, widths = c(5, 2))
grid.arrange(p5.SOD, blankPlot, p6.SOM, blankPlot, p7.BD, legend, p8.N2, blankPlot, ncol = 2, nrow = 4, widths = c(8, 2))
grid.newpage()
grid.arrange(p5.SOD, blankPlot, p6.SOM, blankPlot, p7.BD, legend, p8.N2, blankPlot, ncol = 2, nrow = 4, widths = c(8, 2))
grid.arrange(p5.SOD, blankPlot, p6.SOM, legend, p7.BD, blankPlot, p8.N2, blankPlot, ncol = 2, nrow = 4, widths = c(8, 2))
sed.join %>%
filter(variable == "SOD") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(colour = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black"),
legend.position = "none") +
coord_cartesian(xlim = c(0, 20)) +
ylab(expression(paste("SOD (", mu, "mol ", O[2], " ", m^-2, " ", h^-1, ")"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
p5.SOD <- sed.join %>%
filter(variable == "SOD") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(colour = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black"),
legend.position = "none") +
coord_cartesian(xlim = c(0, 20)) +
ylab(expression(paste("SOD (", mu, "mol ", O[2], " ", m^-2, " ", h^-1, ")"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
p6.SOM <- sed.join %>%
filter(variable == "PercentOM") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(group = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black"),
legend.position = "none") +
coord_cartesian(xlim = c(0, 20)) +
ylab(expression(paste("SOM (%)"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
p7.BD <- sed.join %>%
filter(variable == "BulkDensity") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(group = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black"),
legend.position = "none") +
coord_cartesian(xlim = c(0, 20)) +
ylab(expression(paste("Bulk Density (g ", cm^-3, ")"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
p8.N2 <- sed.join %>%
filter(variable == "N2Flux") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(colour = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
legend.position = "none") +
coord_cartesian(xlim = c(0, 20)) +
xlab("Restored Age (years)") +
ylab(expression(paste("Bulk Density (g ", cm^-3, ")"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
grid.newpage()
grid.arrange(p5.SOD, blankPlot, p6.SOM, legend, p7.BD, blankPlot, p8.N2, blankPlot, ncol = 2, nrow = 4, widths = c(8, 2))
grid.arrange(p5.SOD, blankPlot, p6.SOM, legend, p7.BD, blankPlot, p8.N2, blankPlot, ncol = 2, nrow = 4, widths = c(8, 2), heights = c(2, 2, 2, 2,))
grid.arrange(p5.SOD, blankPlot, p6.SOM, legend, p7.BD, blankPlot, p8.N2, blankPlot, ncol = 2, nrow = 4, widths = c(8, 2), heights = c(2, 2, 2, 2))
grid.draw(rbind(ggplotGrob(p5.SOD), ggplotGrob(p6.SOM), ggplotGrob(p7.BD), ggplotGrob(p8.N2), ggplotGrob(legend), size = "last"))
grid.newpage()
grid.draw(rbind(ggplotGrob(p5.SOD), ggplotGrob(p6.SOM), ggplotGrob(p7.BD), ggplotGrob(p8.N2), ggplotGrob(legend), size = "last"))
grid.arrange(p5.SOD, blankPlot, p6.SOM, legend, p7.BD, blankPlot, p8.N2, blankPlot, ncol = 2, nrow = 4, widths = c(8, 2), heights = c(2, 2, 2, 2))
grid.arrange(p5.SOD, blankPlot, p6.SOM, legend, p7.BD, blankPlot, p8.N2, blankPlot, ncol = 2, nrow = 4, widths = c(9, 2), heights = c(2, 2, 2, 2))
sed.join %>%
filter(variable == "N2Flux") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black")) +
xlab("Restored Age (years)") +
ylab(expression(paste(N[2], "flux (", mu, "mol ", NO[2], " ", m^-2, " ", h^-1, ")")))
sed.join %>%
filter(variable == "N2Flux") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black")) +
xlab("Restored Age (years)") +
ylab(expression(paste(N[2], " flux (", mu, "mol ", NO[2], " ", m^-2, " ", h^-1, ")")))
sed.join %>%
filter(variable == "N2Flux") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black")) +
xlab("Restored Age (years)") +
ylab(expression(paste(N[2], " flux (", mu, "mol N ", m^-2, " ", h^-1, ")")))
p4.N2 <- sed.join %>%
filter(variable == "N2Flux") %>%
ggplot(aes(Age, value)) +
geom_point(size = 2) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1, colour = "mediumblue") +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black")) +
xlab("Restored Age (years)") +
ylab(expression(paste(N[2], " flux (", mu, "mol N ", m^-2, " ", h^-1, ")")))
grid.newpage()
grid.draw(rbind(ggplotGrob(p1.SOD), ggplotGrob(p2.SOM), ggplotGrob(p3.BD), ggplotGrob(p4.N2),
size = "last"))
tiff("Figures\\Thesis\\RT-seasonal-sed-params", width = 350, height = 250, units = "mm", res = 300, compression = "lzw")
grid.draw(rbind(ggplotGrob(p1.SOD), ggplotGrob(p2.SOM), ggplotGrob(p3.BD), ggplotGrob(p4.N2),
size = "last"))
dev.off()
grid.draw(rbind(ggplotGrob(p5.SOD), ggplotGrob(p6.SOM), ggplotGrob(p7.BD), ggplotGrob(p8.N2), size = "last"))
grid.newpage()
grid.draw(rbind(ggplotGrob(p5.SOD), ggplotGrob(p6.SOM), ggplotGrob(p7.BD), ggplotGrob(p8.N2), size = "last"))
sed.join %>%
filter(variable == "N2Flux") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(colour = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
legend.position = "none") +
coord_cartesian(xlim = c(0, 20)) +
xlab("Restored Age (years)") +
ylab(expression(paste(N[2], " flux (", mu, "mol N ", m^-2, " ", h^-1, ")"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
p8.N2 <- sed.join %>%
filter(variable == "N2Flux") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(colour = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 15),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
legend.position = "none") +
coord_cartesian(xlim = c(0, 20)) +
xlab("Restored Age (years)") +
ylab(expression(paste(N[2], " flux (", mu, "mol N ", m^-2, " ", h^-1, ")"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
grid.arrange(arrangeGrob(p5.SOD,
p6.SOM ,
p7.BD,
p8.N2,
ncol = 1,
nrow = 4),
legend,
widths = unit.c(unit(2, "lines"), unit(1, "npc") - unit(2, "lines") - legend$width, legend$width), nrow = 1)
grid.arrange(arrangeGrob(p5.SOD,
p6.SOM ,
p7.BD,
p8.N2,
ncol = 1,
nrow = 4),
legend)
grid.arrange(p5.SOD, p6.SOM, p7.BD, p8.N2, legend, ncol = 2,
heights = c(10, 1), widths = c(1, 2, 1), as.table = T)
grid.arrange(p5.SOD, blankPlot, p6.SOM, legend, p7.BD, blankPlot, p8.N2, blankPlot, ncol = 2, nrow = 4, widths = c(9, 2), heights = c(2, 2, 2, 2), as.table = F)
grid.arrange(p5.SOD, blankPlot, p6.SOM, legend, p7.BD, blankPlot, p8.N2, blankPlot, ncol = 2, nrow = 4, widths = c(9, 2), heights = c(2, 2, 2, 2), as.table = T)
grid.draw(rbind(ggplotGrob(p5.SOD), ggplotGrob(p6.SOM), ggplotGrob(p7.BD), ggplotGrob(p8.N2), size = "last"))
grid.newpage()
grid.draw(rbind(ggplotGrob(p5.SOD), ggplotGrob(p6.SOM), ggplotGrob(p7.BD), ggplotGrob(p8.N2), size = "last"))
grid.draw(rbind(ggplotGrob(p5.SOD), ggplotGrob(p6.SOM), ggplotGrob(p7.BD), ggplotGrob(p8.N2), size = "last"), legend)
grid.newpage()
grid.draw(rbind(ggplotGrob(p5.SOD), ggplotGrob(p6.SOM), ggplotGrob(p7.BD), ggplotGrob(p8.N2), size = "last"), legend)
grid.draw(rbind(ggplotGrob(p5.SOD), ggplotGrob(p6.SOM), ggplotGrob(p7.BD), ggplotGrob(p8.N2), size = "last"), ncol = 2)
grid.draw(rbind(ggplotGrob(p5.SOD), ggplotGrob(p6.SOM), ggplotGrob(p7.BD), ggplotGrob(p8.N2), legend, size = "last"), ncol = 2)
grid.draw(rbind(ggplotGrob(p5.SOD), ggplotGrob(p6.SOM), ggplotGrob(p7.BD), ggplotGrob(p8.N2), legend, size = "last"))
grid.arrange(grobs = c(p5.SOD, p6.SOM, p7.BD, p8.N2),
widths = c(8,2),
layout_matrix = rbind(c(1, 2, NA),
c(3, 3, 4))
grid.newpage()
grid.arrange(grobs = c(p5.SOD, p6.SOM, p7.BD, p8.N2),
grid.arrange(grobs = c(p5.SOD, p6.SOM, p7.BD, p8.N2),
widths = c(8,2),
layout_matrix = rbind(c(1, 2, NA),
c(3, 3, 4)))
g$widths <- unit.pmax(ggplotGrob(p6.SOM)$widths)
g5 <- ggplotGrob(p5.SOD)
g6 <- ggplotGrob(p6.SOM)
g7 <- ggplotGrob(p7.BD)
g8 <- ggplotGrob(p8.N2)
g$widths <- unit.pmax(g5$widths, g6$widths, g7$widths, g8$widths)
g <- rbind(g5, g6, g7, g8, size = "first")
g$widths <- unit.pmax(g5$widths, g6$widths, g7$widths, g8$widths)
grid.newpage()
grid.draw(g)
grid.draw(g, legend)
grid.arrange(g, legend)
grid.arrange(g, legend, ncol = 2)
grid.arrange(g, legend, ncol = 2, widths = c(8, 2))
grid.arrange(g, legend, ncol = 2, widths = c(10, 1))
grid.arrange(g, legend, ncol = 2, widths = c(10, 1))
view(g)
str(g)
grid.newpage()
grid.arrange(g, legend, ncol = 2, widths = c(10, 1))
grid.draw(g, legend)
grid.newpage()
grid.arrange(g, legend, ncol = 2, widths = c(10, 1))
tiff("Figures\\Thesis\\RT-seasonal-sed-params-by-habitat", width = 350, height = 250, units = "mm", res = 300, compression = "lzw")
#Graph the bound plots and the legend using grid.arrange. Adjust the number of columns and widths accordingly.
grid.arrange(g, legend, ncol = 2, widths = c(10, 1))
dev.off()
grid.arrange(g, legend, ncol = 2, widths = c(10, 1), heights = c(2, 4))
grid.arrange(g, legend, ncol = 2, widths = c(10, 1), heights = c(10, 4))
grid.arrange(g, legend, ncol = 2, widths = c(10, 1))
lwidth <- sum(legend$width)
grid.arrange(g, legend, ncol = 2, widths = unit.c(unit(1, "npc") - lwidth, lwidth))
grid.newpage()
tiff("Figures\\Thesis\\RT-seasonal-sed-params-by-habitat", width = 350, height = 250, units = "mm", res = 300, compression = "lzw")
grid.arrange(g, legend, ncol = 2, widths = unit.c(unit(1, "npc") - lwidth, lwidth))
dev.off()
grid.arrange(g, legend, ncol = 2, widths = c(8, 1))
tiff("Figures\\Thesis\\RT-seasonal-sed-params-by-habitat", width = 350, height = 250, units = "mm", res = 300, compression = "lzw")
grid.arrange(g, legend, ncol = 2, widths = c(8, 1))
dev.off()
grid.arrange(g, legend, ncol = 2, widths = c(5, 1))
grid.arrange(g, legend, ncol = 2, widths = c(8, 3))
?gtable_filter
legend2 <- get_legend(p6.SOM)
sed.join %>%
filter(variable == "PercentOM") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(group = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black"),
legend.position = "none",
legend.text = element_text(size = 12)) +
coord_cartesian(xlim = c(0, 20)) +
ylab(expression(paste("SOM (%)"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
legend2 <- get_legend(p6.SOM)
sed.join %>%
filter(variable == "PercentOM") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(group = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black"),
#legend.position = "none",
legend.text = element_text(size = 12)) +
coord_cartesian(xlim = c(0, 20)) +
ylab(expression(paste("SOM (%)"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
p6.SOM <- sed.join %>%
filter(variable == "PercentOM") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(group = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black"),
legend.position = "none",
legend.text = element_text(size = 12)) +
coord_cartesian(xlim = c(0, 20)) +
ylab(expression(paste("SOM (%)"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
legend2 <- get_legend(p6.SOM)
p6.SOM <- sed.join %>%
filter(variable == "PercentOM") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(group = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black"),
#legend.position = "none",
legend.text = element_text(size = 12)) +
coord_cartesian(xlim = c(0, 20)) +
ylab(expression(paste("SOM (%)"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
legend2 <- get_legend(p6.SOM)
grid.arrange(g, legend, ncol = 2, widths = c(8, 1))
grid.arrange(g, legend2, ncol = 2, widths = c(8, 1))
sed.join %>%
filter(variable == "SOD") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(colour = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black"),
legend.text = element_text(size = 15)) +
coord_cartesian(xlim = c(0, 20)) +
ylab(expression(paste("SOD (", mu, "mol ", O[2], " ", m^-2, " ", h^-1, ")"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
sed.join %>%
filter(variable == "SOD") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(colour = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 20)) +
coord_cartesian(xlim = c(0, 20)) +
ylab(expression(paste("SOD (", mu, "mol ", O[2], " ", m^-2, " ", h^-1, ")"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
legend.plot <- sed.join %>%
filter(variable == "SOD") %>%
ggplot(aes(Age, value, colour = Habitat)) +
geom_point(size = 2) +
geom_smooth(aes(colour = Habitat), method = "lm", formula = y ~ poly(x,2), se = F, size = 1) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
theme(panel.background = element_rect(fill = "grey96", colour = NA),
axis.title.x = element_blank(),
axis.title.y = element_text(margin = margin(r = 20), size = 15),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12, colour = "black"),
legend.text = element_text(size = 15),
legend.title = element_text(size = 20)) +
coord_cartesian(xlim = c(0, 20)) +
ylab(expression(paste("SOD (", mu, "mol ", O[2], " ", m^-2, " ", h^-1, ")"))) +
scale_colour_manual(values = c("darkorchid4", "olivedrab", "darkgoldenrod"),
labels = c("  oyster",
"  marsh",
"  sandflat"))
legend2 <- get_legend(legend.plot)
legend2 <- gtable_filter(ggplotGrob(legend.plot), "guide-box")
grid.newpage()
grid.arrange(g, legend2, ncol = 2, widths = c(8, 1))
grid.arrange(g, legend2, ncol = 2, widths = c(8, 2))
grid.arrange(g, legend2, ncol = 2, widths = c(9, 2))
grid.arrange(g, legend2, ncol = 2, widths = c(9, 1.5))
tiff("Figures\\Thesis\\RT-seasonal-sed-params-by-habitat", width = 350, height = 250, units = "mm", res = 300, compression = "lzw")
#Graph the bound plots and the legend using grid.arrange. Adjust the number of columns and widths accordingly.
grid.arrange(g, legend2, ncol = 2, widths = c(9, 1.5))
dev.off()
