summary(lm(annual.data$N2Flux~cbind(annual.data$Age, annual.data$Age^2)))
summary(lm(annual.data$N2Flux~annual.data$Age^2))
melted.1 %>%
ggplot(aes(Age, value)) +
geom_point() +
geom_smooth(method = "lm", formula = quad.formula)
melted.1 %>%
ggplot(aes(Age, value)) +
geom_point() +
geom_smooth(method = "lm", formula = quad.formula) +
stat_poly_eq(formula = y ~ poly(x,2),
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
method.args = list(formula = quad.formula),
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
str(melted.1)
View(melted.1)
melted.1 %>%
sort(variable = "N2Flux") %>%
ggplot(aes(Age, value)) +
geom_point() +
geom_smooth(method = "lm", formula = quad.formula) +
stat_poly_eq(formula = y ~ poly(x,2),
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
method.args = list(formula = quad.formula),
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
melted.1 %>%
filter(variable = "N2Flux") %>%
ggplot(aes(Age, value)) +
geom_point() +
geom_smooth(method = "lm", formula = quad.formula) +
stat_poly_eq(formula = y ~ poly(x,2),
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
method.args = list(formula = quad.formula),
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
melted.1 %>%
filter(variable == "N2Flux") %>%
ggplot(aes(Age, value)) +
geom_point() +
geom_smooth(method = "lm", formula = quad.formula) +
stat_poly_eq(formula = y ~ poly(x,2),
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
method.args = list(formula = quad.formula),
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
melted.1 %>%
filter(variable == "N2Flux") %>%
ggplot(aes(Age, value)) +
geom_point() +
geom_smooth(method = "lm", formula = quad.formula, se = F) +
stat_poly_eq(formula = y ~ poly(x,2),
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
method.args = list(formula = quad.formula),
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
drops <- c("O2conc", "PercentInundation", "NOxFlux", "NH3Flux")
annual.fix <- annual.data[ , !(names(annual.data) %in% drops)]
annual.fix$Age <- factor(annual.fix$Age, levels = c("0", "2", "7", "20"))
#Start by finding the optimal value of lambda
#Create a column with positive values of N2 by adding 10 to each flux
annual.fix <- mutate(annual.fix,
PosN2 = N2Flux + 10)
#Create a log-likelihood graph using a command from the MASS package
bctrans <- boxcox(PosN2 ~ Age, data = annual.fix,
lambda = seq(0, 1, by = 0.1))
#Identify the maximum likelihood value
which.max(bctrans$y)
#Use that maximum likelihood value (from the y axis) to determine the associated lambda (on the x axis)
bctrans$x[which.max(bctrans$y)]
#Take the variable to the power of the lambda to perform the transformation!
annual.fix <- mutate(annual.fix,
N2BoxCox = (((PosN2 ^ 0.545) - 1) / 0.545))
View(annual.fix)
annual.fix %>%
ggplot(aes(Age, N2BoxCox)) %>%
geom_point() +
geom_smooth(method = "lm", formula = y ~ x, se = F)
annual.fix %>%
ggplot(aes(Age, N2BoxCox)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ x, se = F)
annual.fix %>%
ggplot(aes(Age, N2BoxCox)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ (x^2), se = F)
annual.fix %>%
ggplot(aes(Age, N2BoxCox)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ (x^2))
annual.fix %>%
ggplot(aes(Age, N2BoxCox)) +
geom_point()
str(annual.fix)
annual.fix.temp$Age <- as.numeric(annual.fix$Age)
annual.fix <- mutate(annual.fix,
NumAge = as.numeric(annual.fix$Age))
str(annual.fix)
drops <- c("O2conc", "PercentInundation", "NOxFlux", "NH3Flux")
annual.fix <- annual.data[ , !(names(annual.data) %in% drops)]
str(annual.fix)
annual.fix %>%
ggplot(aes(Age, N2BoxCox)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ (x^2))
annual.fix <- add.age(annual.fix)
str(annual.fix)
drops <- c("O2conc", "PercentInundation", "NOxFlux", "NH3Flux")
annual.fix <- annual.data[ , !(names(annual.data) %in% drops)]
annual.fix$Age <- factor(annual.fix$Age, levels = c("0", "2", "7", "20"))
#Start by finding the optimal value of lambda
#Create a column with positive values of N2 by adding 10 to each flux
annual.fix <- mutate(annual.fix,
PosN2 = N2Flux + 10)
#Create a log-likelihood graph using a command from the MASS package
bctrans <- boxcox(PosN2 ~ Age, data = annual.fix,
lambda = seq(0, 1, by = 0.1))
#Identify the maximum likelihood value
which.max(bctrans$y)
#Use that maximum likelihood value (from the y axis) to determine the associated lambda (on the x axis)
bctrans$x[which.max(bctrans$y)]
#Take the variable to the power of the lambda to perform the transformation!
annual.fix <- mutate(annual.fix,
N2BoxCox = (((PosN2 ^ 0.545) - 1) / 0.545))
View(annual.fix)
View(annual.data)
str(annual.data)
View(add.age)
View(add.age)
add.num.age <- function(x){
mutate(x, NumAge = ifelse(Site == "IMS", 0,
ifelse(Site == "Carrot", 2,
ifelse(Site == "NOAA", 7, 20))))
}
trial <- add.num.age(annual.fix)
str(trial)
trial %>%
ggplot(aes(Age, N2BoxCox)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ (x^2))
View(trial)
trial %>%
ggplot(aes(NumAge, N2BoxCox)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ (x^2))
trial %>%
ggplot(aes(NumAge, N2BoxCox)) +
geom_point() +
geom_smooth(method = "lm", formula = quad.formula)
summary(lm(trial$N2BoxCox ~ poly(trial$NumAge,2))
#Passes Bartlett, p = 0.057
bartlett.test(N2BoxCox ~ Site, data = annual.fix)
#Army still fails, but is closer: p = 0.022 vs 0.0007
test.norm.BCN2 <- annual.fix %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(N2BoxCox)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
p2 <- ggplot(annual.fix, aes(Age, N2BoxCox))
p2 + geom_point()
p3 <- ggplot(annual.fix, aes(Age, N2Flux))
p3 + geom_point()
par(mfrow=c(2,2))
#subsetting annual.fix to create a new data frame with only tranformed summer data for testing
summer.BCtest <- annual.fix %>%
filter(Season == "Summer") %>%
group_by(Site)
#Running checks on transformed summer N2 Flux data-- passes all
bartlett.test(N2BoxCox ~ Site, data = summer.BCtest)
test.norm.BCsumN2 <- summer.BCtest %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(N2BoxCox)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
###Annual SOD###
#Passes Bartlett!
bartlett.test(SOD ~ Site, data = annual.data)
#Army & Carrot fail normality.
test.norm.SOD <- annual.data %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(SOD)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
#Implement a Box Cox transformation to correct
#Start by finding the optimal value of lambda
#Create a log-likelihood graph using a command from the MASS package
bctrans2 <- boxcox(SOD ~ Age, data = annual.fix,
lambda = seq(0, 1, by = 0.1))
#Identify the maximum likelihood value
which.max(bctrans2$y)
#Use that maximum likelihood value (from the y axis) to determine the associated lambda (on the x axis)
bctrans2$x[which.max(bctrans2$y)]
#Take the variable to the power of the lambda to perform the transformation!
annual.fix <- mutate(annual.fix,
SODBoxCox = (((SOD ^ 0.192) - 1) / 0.192))
annual.fixtemp <- mutate(annual.fix,
log.SOD = log(SOD, 10),
ln.SOD = log(SOD))
#Passes Bartlett still, and normality is better: Carrot passes and Army still fails, but better (p = 0.01 vs 0.000002)
test.norm.BCSOD2 <- annual.fixtemp %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(log.SOD)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
logSODlm <- lm(ln.SOD ~ Age, annual.fixtemp)
plot(logSODlm)
p4 <- ggplot(annual.fixtemp, aes(Age, ln.SOD))
p4 + geom_point() + geom_smooth(method = "lm")
par(mfrow=c(1,1))
fit <- lm(SOD ~ log(Age + .001), annual.data)
summary(fit)
annual.data %>%
ggplot(aes(Age, SOD)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ log(x + .001), size = 2) +
stat_poly_eq(formula = y ~ log(x + .001),
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
method.args = list(formula = y ~ log(x + .001),
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right"))
##Summer N2 flux
#Create subset data frame with only summer data to run test on N2 Flux, to ultimately add a dotted line for summer N2 flux trajectory. This is a modified version of the broader seasonal regressions that were conducted earlier in analysis to explore trends.
summer.test <- annual.data %>%
filter(Season == "Summer") %>%
group_by(Site)
#passes Bartlett
bartlett.test(N2Flux ~ Site, data = summer.test)
#Carrot fails normality
test.norm.sumN2 <- summer.test %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(N2Flux)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
##Annual SOM
#fails Bartlett test, p = 1.2 E-8
bartlett.test(PercentOM ~ Site, data = annual.data)
#IMS & Carrot fail normality
test.norm.SOM <- annual.data %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(PercentOM)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
#First attempted BoxCox transform but it didn't work- possibly b/c it's a %?
#Created new data frame to attempt transformations of SOM. Includes the column SOM which is PercentOM changed to a proportion rather than a %.
#Attempt arcsin transformation, which wasn't helpful: still failed same checks. Then attempted logit transformation.
annual.fix2 <- mutate(annual.fix,
SOM = PercentOM / 100,
sqrootSOM = sqrt(SOM),
arcsinSOM = asin(sqrootSOM),
logitSOM = log(SOM / (1-SOM)))
#Logit transform fails Barlett but better (p = 0.002) and all pass normality
bartlett.test(logitSOM ~ Age, annual.fix2)
test.norm.logitSOM <- annual.fix2 %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(logitSOM)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
##Spring bulk density
#Fails Bartlett, p = 0.01
bartlett.test(BulkDensity ~ Site, data = sed.data)
#All pass
test.norm.BD <- sed.data %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(BulkDensity)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
sed.fix <- mutate(sed.data,
log.BD = log(BulkDensity, 10),
sqroot.BD = sqrt(BulkDensity),
BDsquared = BulkDensity ^ 2,
ln.BD = log(BulkDensity),
cuberoot.BD = BulkDensity ^ (1/3),
logplus.BD = log(BulkDensity + 1, 10))
sed.fix$Age <- factor(sed.fix$Age, levels = c("0", "2", "7", "20"))
bartlett.test(log.BD ~ Site, sed.fix)
p1 <- ggplot(sed.fix, aes(Age, BulkDensity))
p1 + geom_point(aes(colour = CoreName)) +
coord_cartesian(ylim = c(0,2))
lmBD <- lm(BulkDensity ~ Age, sed.fix)
par(mfrow = c(2,2))
plot(lmBD)
lmtest::bptest(lmBD)
```
summary(lm(trial$N2BoxCox ~ poly(trial$NumAge,2))
#Passes Bartlett, p = 0.057
bartlett.test(N2BoxCox ~ Site, data = annual.fix)
#Army still fails, but is closer: p = 0.022 vs 0.0007
test.norm.BCN2 <- annual.fix %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(N2BoxCox)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
p2 <- ggplot(annual.fix, aes(Age, N2BoxCox))
p2 + geom_point()
p3 <- ggplot(annual.fix, aes(Age, N2Flux))
p3 + geom_point()
par(mfrow=c(2,2))
#subsetting annual.fix to create a new data frame with only tranformed summer data for testing
summer.BCtest <- annual.fix %>%
filter(Season == "Summer") %>%
group_by(Site)
#Running checks on transformed summer N2 Flux data-- passes all
bartlett.test(N2BoxCox ~ Site, data = summer.BCtest)
test.norm.BCsumN2 <- summer.BCtest %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(N2BoxCox)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
###Annual SOD###
#Passes Bartlett!
bartlett.test(SOD ~ Site, data = annual.data)
#Army & Carrot fail normality.
test.norm.SOD <- annual.data %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(SOD)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
#Implement a Box Cox transformation to correct
#Start by finding the optimal value of lambda
#Create a log-likelihood graph using a command from the MASS package
bctrans2 <- boxcox(SOD ~ Age, data = annual.fix,
lambda = seq(0, 1, by = 0.1))
#Identify the maximum likelihood value
which.max(bctrans2$y)
#Use that maximum likelihood value (from the y axis) to determine the associated lambda (on the x axis)
bctrans2$x[which.max(bctrans2$y)]
#Take the variable to the power of the lambda to perform the transformation!
annual.fix <- mutate(annual.fix,
SODBoxCox = (((SOD ^ 0.192) - 1) / 0.192))
annual.fixtemp <- mutate(annual.fix,
log.SOD = log(SOD, 10),
ln.SOD = log(SOD))
#Passes Bartlett still, and normality is better: Carrot passes and Army still fails, but better (p = 0.01 vs 0.000002)
test.norm.BCSOD2 <- annual.fixtemp %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(log.SOD)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
logSODlm <- lm(ln.SOD ~ Age, annual.fixtemp)
plot(logSODlm)
p4 <- ggplot(annual.fixtemp, aes(Age, ln.SOD))
p4 + geom_point() + geom_smooth(method = "lm")
par(mfrow=c(1,1))
fit <- lm(SOD ~ log(Age + .001), annual.data)
summary(fit)
annual.data %>%
ggplot(aes(Age, SOD)) +
geom_point() +
geom_smooth(method = "lm", formula = y ~ log(x + .001), size = 2) +
stat_poly_eq(formula = y ~ log(x + .001),
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
method.args = list(formula = y ~ log(x + .001),
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right"))
##Summer N2 flux
#Create subset data frame with only summer data to run test on N2 Flux, to ultimately add a dotted line for summer N2 flux trajectory. This is a modified version of the broader seasonal regressions that were conducted earlier in analysis to explore trends.
summer.test <- annual.data %>%
filter(Season == "Summer") %>%
group_by(Site)
#passes Bartlett
bartlett.test(N2Flux ~ Site, data = summer.test)
#Carrot fails normality
test.norm.sumN2 <- summer.test %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(N2Flux)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
##Annual SOM
#fails Bartlett test, p = 1.2 E-8
bartlett.test(PercentOM ~ Site, data = annual.data)
#IMS & Carrot fail normality
test.norm.SOM <- annual.data %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(PercentOM)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
#First attempted BoxCox transform but it didn't work- possibly b/c it's a %?
#Created new data frame to attempt transformations of SOM. Includes the column SOM which is PercentOM changed to a proportion rather than a %.
#Attempt arcsin transformation, which wasn't helpful: still failed same checks. Then attempted logit transformation.
annual.fix2 <- mutate(annual.fix,
SOM = PercentOM / 100,
sqrootSOM = sqrt(SOM),
arcsinSOM = asin(sqrootSOM),
logitSOM = log(SOM / (1-SOM)))
#Logit transform fails Barlett but better (p = 0.002) and all pass normality
bartlett.test(logitSOM ~ Age, annual.fix2)
test.norm.logitSOM <- annual.fix2 %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(logitSOM)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
##Spring bulk density
#Fails Bartlett, p = 0.01
bartlett.test(BulkDensity ~ Site, data = sed.data)
#All pass
test.norm.BD <- sed.data %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(BulkDensity)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
sed.fix <- mutate(sed.data,
log.BD = log(BulkDensity, 10),
sqroot.BD = sqrt(BulkDensity),
BDsquared = BulkDensity ^ 2,
ln.BD = log(BulkDensity),
cuberoot.BD = BulkDensity ^ (1/3),
logplus.BD = log(BulkDensity + 1, 10))
sed.fix$Age <- factor(sed.fix$Age, levels = c("0", "2", "7", "20"))
bartlett.test(log.BD ~ Site, sed.fix)
p1 <- ggplot(sed.fix, aes(Age, BulkDensity))
p1 + geom_point(aes(colour = CoreName)) +
coord_cartesian(ylim = c(0,2))
lmBD <- lm(BulkDensity ~ Age, sed.fix)
par(mfrow = c(2,2))
plot(lmBD)
lmtest::bptest(lmBD)
```
model <- lm(trial$N2BoxCox ~ poly(trial$NumAge,2))
summary(model)
trial %>%
ggplot(aes(NumAge, N2BoxCox)) +
geom_point() +
geom_smooth(method = "lm", formula = quad.formula)
bartlett.test(N2BoxCox ~ Site, data = annual.fix)
p2 <- ggplot(annual.fix, aes(Age, N2BoxCox))
p2 + geom_point()
par(mfrow=c(2,2))
p2 <- ggplot(annual.fix, aes(Age, N2BoxCox))
p2 + geom_point()
p3 <- ggplot(annual.fix, aes(Age, N2Flux))
p3 + geom_point()
trial %>%
ggplot(aes(NumAge, N2BoxCox)) +
geom_point() +
geom_smooth(method = "lm", formula = quad.formula)
model <- lm(trial$N2BoxCox ~ poly(trial$NumAge,2))
summary(model)
test.norm.SOD <- annual.data %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(SOD)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
View(test.norm.SOD)
bctrans2 <- boxcox(SOD ~ Age, data = annual.fix,
lambda = seq(0, 1, by = 0.1))
#Identify the maximum likelihood value
which.max(bctrans2$y)
#Use that maximum likelihood value (from the y axis) to determine the associated lambda (on the x axis)
bctrans2$x[which.max(bctrans2$y)]
#Take the variable to the power of the lambda to perform the transformation!
annual.fix <- mutate(annual.fix,
SODBoxCox = (((SOD ^ 0.192) - 1) / 0.192))
annual.fixtemp <- mutate(annual.fix,
log.SOD = log(SOD, 10),
ln.SOD = log(SOD))
par(mfrow=c(1,1))
test.norm.BCSOD2 <- annual.fixtemp %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(log.SOD)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
View(test.norm.BCSOD2)
View(annual.fixtemp)
trial2 <- add.num.age(annual.fixtemp)
View(trial2)
model2 <- lm(trial2$log.SOD ~ trial2$NumAge)
model2 <- lm(trial2$log.SOD ~ poly(trial2$NumAge^2))
summary(model2)
p9 <- ggplot(trial2, aes(NumAge, log.SOD))
p9 + geom_point()
p9 + geom_point() + geom_smooth(method = "lm", formula = quad.formula)
model2 <- lm(trial2$log.SOD ~ poly(trial2$NumAge, 2))
summary(model2)
model3 <- lm(annual.fixtemp$NumAge ~ poly(annual.fixtemp$SOD, 2))
model3 <- lm(trial2$NumAge ~ poly(trial2$SOD, 2))
summary(model3)
p10 <- ggplot(trial2, aes(NumAge, SOD))
p10 + geom_point() + geom_smooth(method = "lm", formula = quad.formula)
p9 + geom_point() + geom_smooth(method = "lm", formula = quad.formula)
p10 + geom_point() + geom_smooth(method = "lm", formula = quad.formula)
annual.fix2 <- mutate(annual.fix,
SOM = PercentOM / 100,
sqrootSOM = sqrt(SOM),
arcsinSOM = asin(sqrootSOM),
logitSOM = log(SOM / (1-SOM)))
bartlett.test(logitSOM ~ Age, annual.fix2)
test.norm.logitSOM <- annual.fix2 %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(logitSOM)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
View(test.norm.logitSOM)
str(annual.fix2)
trial3 <- add.num.age(annual.fix2)
View(trial2)
view(trial3)
View(trial3)
p11 <- ggplot(trial3, aes(NumAge, logitSOM))
p11 + geom_point() + geom_smooth(method = "lm", formula = quad.formula)
p12 <- ggplot(trial3, aes(NumAge, logitSOM))
p12 + geom_point() + geom_smooth(method = "lm", formula = quad.formula)
p12 <- ggplot(trial3, aes(NumAge, SOM))
p12 + geom_point() + geom_smooth(method = "lm", formula = quad.formula)
model2 <- lm(trial2$SOD ~ poly(trial2$NumAge, 2))
summary(model2)
model4 <- lm(trial3$SOM ~ poly(trial3$NumAge, 2))
summary(model4)
model5 <- lm(trial3$logitSOM ~ poly(trial3$NumAge, 2))
summary(model5)
