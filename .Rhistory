depth_dist <- ggplot(diamonds, aes(depth)) + xlim(58, 68)
install.packages("ggplot2")
library("ggplot2")
depth_dist <- ggplot(diamonds, aes(depth)) + xlim(58, 68)
geom_histogram(aes(y = ..density..), binwidth = 0.1) + facet_grid(cut ~ .)
depth_dist +
geom_histogram(aes(y = ..density..), binwidth = 0.1) + facet_grid(cut ~ .)
geom_histogram(aes(y = ..density..), binwidth = 0.5) + facet_grid(cut ~ .)
depth_dist +
geom_histogram(aes(y = ..density..), binwidth = 0.5) + facet_grid(cut ~ .)
depth_dist +
geom_histogram(aes(y = ..density..), binwidth = 0.1) + facet_grid(cut ~ .)
depth_dist + geom_histogram(aes(fill = cut), binwidth = 0.1, position = "fill")
depth_dist + geom_freqpoly(aes(y = ..density.., colour = cut), bindwidth = 0.1)
depth_dist + geom_freqpoly(aes(y = ..density.., colour = cut), binwidth = 0.1)
qplot(cut, depth, data = diamonds, geom = "boxplot")
qplot(carat, depth, data = diamonds, geom = "boxplot",
group = round_any(carat, 0.1, floor), xlim = c(0,3))
?round_any
qplot(carat, depth, data = diamonds, geom = "boxplot",
group = round_any(carat, 0.1, floor), xlim = c(0,3))
qplot(carat, depth, data = diamonds, geom = "boxplot", group = round_any(carat, 0.1, floor), xlim = c(0,3))
qplot(carat, depth, data = diamonds, geom = "boxplot",
+ group = round_any(carat, 0.1, floor), xlim = c(0,3))
qplot(carat, depth, data = diamonds, geom = "boxplot", +
group = round_any(carat, 0.1, floor), xlim = c(0,3))
qplot(carat, depth, data = diamonds, geom = "boxplot",
group = round_any(carat, 0.1, floor), xlim = c(0,3))
?round_any
install.packages("plyr")
install.packages("plyr")
library("plyr")
install.packages("dplyr")
library("dplyr")
install.packages("ggplot2")
library("ggplot2")
install.packages("ggpmisc")
library("ggpmisc")
install.packages("lmtest")
library("lmtest")
install.packages("car")
library("car")
all.N2 <- read.csv("N2-flux\\clean\\N2-flux-by-core_with-summer15.csv", header = T, stringsAsFactors = F)
DNE <- read.csv("DNE\\clean\\DNE-clean_no-summer15_all-sites.csv", header = T, stringsAsFactors = F)
source("functions.R")
all.N2 <- set.factors(all.N2)
DNE <- set.factors.basic(DNE)
DNE <- na.omit(DNE)
setwd("E:/R Markdown")
all.N2 <- read.csv("N2-flux\\clean\\N2-flux-by-core_with-summer15.csv", header = T, stringsAsFactors = F)
DNE <- read.csv("DNE\\clean\\DNE-clean_no-summer15_all-sites.csv", header = T, stringsAsFactors = F)
source("functions.R")
all.N2 <- set.factors(all.N2)
DNE <- set.factors.basic(DNE)
DNE <- na.omit(DNE)
leveneTest(N2Flux ~ Site, data = all.N2)
boxplot(N2Flux ~ Site, data = all.N2)
boxplot(N2Flux ~ Season, data = all.N2)
leveneTest(N2Flux ~ Season, data = all.N2)
leveneTest(log_N2Flux ~ Season, data = log.Site)
log.Site <- all.N2 %>%
mutate(log_N2Flux = log(N2Flux + 40, 10))
leveneTest(log_N2Flux ~ Season, data = log.Site)
boxplot(log_N2Flux ~ Season, data = log.Site)
leveneTest(log_N2Flux ~ Site, data = log.Site)
boxplot(N2Flux ~ Season, data = all.N2)
?powerTransform
summary(boxcox <- powerTransform(all.N2))
summary(boxcox <- powerTransform(N2Flux ~ Site, all.N2))
summary(boxcox <- powerTransform((N2Flux + 40) ~ Site, all.N2))
?yjPower
yjPower(all.N2$N2Flux, jacobian.adjusted = F)
yjPower(all.N2$N2Flux, lambda, jacobian.adjusted = F)
yjPower(all.N2$N2Flux, lambda = lambda.max, jacobian.adjusted = F)
yjPower(all.N2$N2Flux, lambda = ncol(N2Flux), jacobian.adjusted = F)
yjPower(all.N2$N2Flux, lambda = ncol(all.N2$N2Flux), jacobian.adjusted = F)
yjPower(all.N2$N2Flux, lambda = 0, jacobian.adjusted = F)
lambda.fm1 <- boxcox((all.N2$N2Flux ~ all.N2$Site), family = "yjPower")
?powerTransform
summary(boxcox <- powerTransform(N2Flux ~ Site, all.N2, family = "yjpower")
summary(boxcox <- powerTransform(N2Flux ~ Site, all.N2, family = "yjpower")
summary(boxcox <- powerTransform(N2Flux ~ Site, all.N2, family = "yjpower")
summary(boxcox <- powerTransform(N2Flux ~ Site, data = all.N2, family = "yjpower")
summary(boxcox <- powerTransform(N2Flux ~ Site, data = all.N2, family = "yjpower")
summary(powerTransform(N2Flux ~ Site, data = all.N2, family = "yjpower")
summary(powerTransform(N2Flux ~ Site, data = all.N2, family = "yjpower")
yjattempt <- powerTransform(N2Flux ~ Site, data = all.N2, family = "yjpower")
yjattempt <- powerTransform(N2Flux ~ Site, data = all.N2, family = "yjpower")
summary(yjattempt <- powerTransform(N2Flux ~ Site, data = all.N2, family = "yjpower")
summary(yjattempt <- powerTransform(N2Flux ~ Site, data = all.N2, family = "yjPower")
summary(yjattempt <- powerTransform(N2Flux ~ Site, data = all.N2, family = "yjPower")
summary(yjattempt <- powerTransform(N2Flux ~ Site, data = all.N2, family = "yjPower"))
test.norm.log.Site <- log.Site %>%
summary(yjattempt <- powerTransform(N2Flux ~ Site, data = all.N2, family = "yjPower"))
?boxCox
boxCox(all.N2$N2Flux, family = "yjpower", plotit = T)
boxCox(all.N2$N2Flux, family = "yjPower", plotit = T)
boxCox(N2Flux, family = "yjPower", plotit = T)
?yjPower
?boxCox
boxCox(N2Flux ~ Site, data = all.N2, family = "yjPower", plotit = T)
origdata.yjtrans <- yjPower(all.N2$N2Flux, lambda = 1)
warnings()
?yjPower
origdata.yjtrans <- powerTransform(N2Flux ~ Site, data = all.N2, lambda = 1, family = "yjPower"))
origdata.yjtrans <- powerTransform(N2Flux ~ Site, data = all.N2, lambda = 1, family = "yjPower")
origdata.yjtrans <- powerTransform(N2Flux ~ Site, data = all.N2, lambda = 1, family = "yjPower")
?powerTransform
origdata.yjtrans <- yjPower(N2Flux ~ Site, data = all.N2, lambda = 1)
?yjPower
origdata.yjtrans <- yjPower(all.N2$N2Flux, lambda = 1)
origdata.yjtrans <- yjPower(all.N2$N2Flux, lambda = 1)
origdata.yjtrans <- yjPower(all.N2$N2Flux, lambda = 1, jacobian.adjusted = F)
boxCox(N2Flux ~ Site, data = all.N2, family = "yjPower", plotit = T)
?boxCox
boxCox(N2Flux ~ Site, data = all.N2, family = "yjPower")
?boxCox
boxCox(N2Flux ~ Site, data = all.N2, family = "yeo.johnson")
boxCox(N2Flux ~ Site, data = all.N2, family = "yjPower")
origdata.yjtrans <- yjPower(all.N2$N2Flux, lambda = 1, jacobian.adjusted = F)
warnings()
?lm
View(all.N2)
no.summer2 <- N2.hab[!N2.hab$Season == "Summer15", ]
all.N2.age <- add.age(all.N2)
View(all.N2.age)
md <- lm(N2Flux ~ Age, data = all.N2.age)
summary(md)
plot(md, which = 1)
boxCox(md)
boxCox(md, family = "yjPower")
mdbc <- boxCox(md, family = "yjPower")
mdbc <- boxCox(md, family = "yjPower", lambda = seq(0,0.8, by = 0.1))
mdbc <- boxCox(md, family = "yjPower", lambda = seq(0,1.5, by = 0.1))
mdbc <- boxCox(md, family = "yjPower", lambda = seq(0.5, 1, by = 0.1))
which.max(mdbc$y)
(lambda <- mdbc$x[which.max(mdbc$y)])
mdbest <- lm(I(N2Flux^lambda) ~ Age, data = all.N2.age)
summary(mdbest)
plot(mdbest, which = 1)
plot(md, which = 1)
plot(mdbest, which = 1)
summary(md)
lambda.allN2age <- boxCox(N2Flux ~ Site, data = all.N2.age, family = "yjPower")
md <- lm(N2Flux ~ Age, data = all.N2.age)
warnings()
summary(md)
plot(md, which = 1)
mdbc <- boxCox(md, family = "yjPower", lambda = seq(0.5, 1, by = 0.1))
which.max(mdbc$y)
(lambda <- mdbc$x[which.max(mdbc$y)])
mdbest <- lm(I(N2Flux^lambda) ~ Age, data = all.N2.age)
summary(mdbest)
plot(mdbest, which = 1)
leveneTest(mdbest)
leveneTest(N2Flux^lambda ~ Age, data = mdbest)
plot(md)
par(mfrow = c(2,2))
plot(md)
md <- lm(N2Flux ~ Site, data = all.N2.age)
summary(md)
par(mfrow = c(2,2))
plot(md)
md <- lm(N2Flux ~ Age, data = all.N2.age)
summary(md)
mdbc <- boxCox(md, family = "yjPower", lambda = seq(0.5, 1, by = 0.1))
plot(mdbest, which = 1)
plot(mdbest)
plot(mdbest)
