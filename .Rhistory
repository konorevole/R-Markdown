N2Flux = mean(N2Flux))
core.N2 <- add.age(core.N2)
core.N2$Age <- as.numeric(core.N2$Age)
core.N2 <- add.habitat(core.N2)
core.N2$Habitat <- factor(core.N2$Habitat, levels = c("oyster", "marsh", "Ref", "LoRef", "HiRef"))
View(core.N2)
str(core.N2)
type.N2 <- ddply(core.N2, c("Season", "Site", "CoreName"), summarise,
avg_N2Flux = mean(N2Flux))
View(type.N2)
str(type.N2)
annual_N2Flux = mean(avg_N2Flux))
annual.N2flux <- ddply(type.N2, c("Site", "CoreName"), summarise,
annual_N2Flux = mean(avg_N2Flux))
View(annual.N2flux)
write.csv(core.N2, "E:\\R Markdown\\N2-flux\\clean\\N2-flux-by-core_with-summer15.csv", row.names = F)
type.N2 <- ddply(core.N2, c("Season", "Site", "CoreName"), summarise,
avg_N2Flux = mean(N2Flux))
write.csv(type.N2, "E:\\R Markdown\\N2-flux\\clean\\N2-flux-by-type_all-seasons_all-sites.csv", row.names = F)
annual.N2flux <- ddply(type.N2, c("Site", "CoreName"), summarise,
annual_N2Flux = mean(avg_N2Flux))
write.csv(annual.N2flux, "E:\\R Markdown\\N2-flux\\clean\\N2-flux-by-type_annual-avg_all-sites.csv", row.names = F)
setwd("E:/R Markdown")
all.N2 <- read.csv("N2-flux\\clean\\N2-flux-by-core_with-summer15.csv", header = T, stringsAsFactors = F)
DNE <- read.csv("DNE\\clean\\DNE-clean_no-summer15_all-sites.csv", header = T, stringsAsFactors = F)
source("functions.R")
library("plyr")
library("dplyr")
library("ggplot2")
library("ggpmisc")
library("lmtest")
library("car")
source("functions.R")
View(all.N2)
View(all.N2)
View(all.N2)
str(all.N2)
all.N2$Habitat <- factor(all.N2$Habitat, levels = c("oyster", "marsh", "Ref", "LoRef", "HiRef"))
all.N2$Age <- as.numeric(all.N2$Age)
str(all.N2)
all.N2 <- set.factors(all.N2)
str(all.N2)
basic.N2 <- all.N2[!all.N2$Season == "Summer15", ]
View(basic.N2)
str(basic.N2)
basic.N2 <- all.N2[!all.N2$Habitat == "LoRef" | all.N2$Habitat == "HiRef", ]
View(all.N2)
View(basic.N2)
basic.N2 <- all.N2[!all.N2$Habitat == "LoRef" & all.N2$Habitat == "HiRef", ]
View(basic.N2)
basic.N2 <- all.N2[!all.N2$Season == "Summer15", ]
basic.N2 <- all.N2[!all.N2$Habitat == "LoRef" | all.N2$Habitat == "HiRef", ]
View(basic.N2)
basic.N2 <- all.N2[!all.N2$Habitat == "LoRef" | "HiRef", ]
basic.N2 <- all.N2[!all.N2$Habitat == "LoRef" || "HiRef", ]
View(basic.N2)
basic.N2 <- all.N2[!all.N2$Season == "Summer15", ]
basic.N2 <- all.N2[!all.N2$Habitat == "LoRef" || "HiRef", ]
View(basic.N2)
basic.N2 <- all.N2[!all.N2$Season == "Summer15", ]
basic.N2 <- basic.N2[!all.N2$Habitat == "LoRef" || "HiRef", ]
View(basic.N2)
basic.N2 <- all.N2[!all.N2$Season == "Summer15", ]
View(basic.N2)
no.summer15 <- all.N2[!all.N2$Season == "Summer15", ]
basic.N2 <- no.summer15[!no.summer15$Habitat == "LoRef" || "HiRef", ]
View(basic.N2)
basic.N2 <- no.summer15[!no.summer15$Habitat == "LoRef", ]
View(basic.N2)
basic.N2 <- no.summer15[!no.summer15$Habitat == "HiRef", ]
no.summer15 <- all.N2[!all.N2$Season == "Summer15", ]
#Eliminate LoRef and HiRef
basic.N2 <- no.summer15[!no.summer15$Habitat == "LoRef", ]
basic.N2 <- basic.N2[!no.summer15$Habitat == "HiRef", ]
View(basic.N2)
no.summer15 <- all.N2[!all.N2$Season == "Summer15", ]
#Eliminate LoRef and HiRef
basic.N2 <- no.summer15[!no.summer15$Habitat == "LoRef", ]
basic.N2 <- basic.N2[!basic.N2$Habitat == "HiRef", ]
View(basic.N2)
basic.N2 <- full.summary(basic.N2)
no.summer15 <- all.N2[!all.N2$Season == "Summer15", ]
#Eliminate LoRef and HiRef
basic.N2 <- no.summer15[!no.summer15$Habitat == "LoRef", ]
basic.N2 <- basic.N2[!basic.N2$Habitat == "HiRef", ]
?full.summary
View(full.summary)
View(full.summary)
View(full.summary)
stats.basic.N2 <- full.summary(basic.N2)
View(stats.basic.N2)
type <- full.summary(basic.N2)
type.basic.N2 <- full.summary(basic.N2)
lm(formula = N2Flux ~ Age, data = basic.N2)
reg1 <- lm(formula = N2Flux ~ Age, data = basic.N2)
summary(reg1)
par(mfrow = c(2,2))
plot(reg1)
basic.N2 %>%
mutate(
SquareRt = sqrt(N2Flux))
SquareRt = sqrt(N2Flux+21))
basic.N2 %>%
mutate(
SquareRt = sqrt(N2Flux+21))
plot(SquareRt ~ Age, basic.N2)
plot(SquareRt ~ Age, basic.N2)
View(basic.N2)
View(basic.N2)
mutate
?mutate
mutate(basic.N2,
SquareRt = sqrt(N2Flux+21))
View(basic.N2)
basic.N2.T <- mutate(basic.N2,
SquareRt = sqrt(N2Flux+21))
View(basic.N2.T)
plot(SquareRt ~ Age, basic.N2.T)
reg2 <- lm(SquareRt ~ Age, basic.N2.T)
summary(reg2)
plot(reg2)
par(mfrow = c(2,2))
plot(reg2)
bartlett.test(SquareRt ~ Age, basic.N2.T)
levene.test(SquareRt ~ Age, basic.N2.T)
leveneTest(SquareRt ~ Age, basic.N2.T)
?leveneTest
leveneTest(SquareRt ~ Age, data = basic.N2.T)
leveneTest(SquareRt ~ Age * Season, data = basic.N2.T)
bartlett.test(SquareRt ~ Age, basic.N2.T)
bartlett.test(N2Flux ~ Age, basic.N2)
plot(reg2)
basic.N2.T <- mutate(basic.N2,
SquareRtN2 = sqrt(N2Flux+21),
logN2 = log(N2Flux, 10))
basic.N2.T <- mutate(basic.N2,
SquareRtN2 = sqrt(N2Flux + 21),
logN2 = log(N2Flux + 21, 10))
View(basic.N2.T)
reg3 <- lm(logN2 ~ Age, basic.N2.T)
plot(reg3)
bartlett.test(logN2 ~ Age, basic.N2.T)
plot(reg2)
plot(reg3)
plot(reg2)
bartlett.test(SquareRtN2 ~ Age, basic.N2.T)
?shapiro.test
shapiro.test(basic.N2.T$SquareRtN2)
SR.norm.results <- basic.N2.T %>%
group_by(Season) %>%
summarise(SW.pvalue = shapiro.test(N2Flux)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
View(SR.norm.results)
SR.norm.results <- basic.N2.T %>%
group_by(Season) %>%
summarise(SW.pvalue = shapiro.test(SquareRootN2)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
SR.norm.results <- basic.N2.T %>%
group_by(Season) %>%
summarise(SW.pvalue = shapiro.test(SquareRtN2)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
SR.norm.results <- basic.N2.T %>%
group_by(Season) %>%
summarise(SW.pvalue = shapiro.test(SquareRtN2)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
SR.norm.results2 <- basic.N2.T %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(SquareRtN2)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
View(SR.norm.results2)
SR.norm.results3 <- basic.N2.T %>%
group_by(Habitat) %>%
summarise(SW.pvalue = shapiro.test(SquareRtN2)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
View(SR.norm.results3)
plot(SquareRtN2 ~ Age, basic.N2.T)
reg2 <- lm(SquareRtN2 ~ Age, basic.N2.T)
summary(reg2)
plot(reg2)
par(mfrow = c(2,2))
plot(reg2)
boxcox(SquareRtN2 ~ Age)
?box.cox
bcPower(basic.N2.T$N2Flux, lambda = seq(0.5, 1, by = 0.1))
basic.N2.T <- mutate(basic.N2,
PosN2 = N2Flux + 21,
SquareRtN2 = sqrt(N2Flux + 21),
logN2 = log(N2Flux + 21, 10))
bcPower(basic.N2.T$PosN2, lambda = seq(0.5, 1, by = 0.1))
find.lambda <- bcPower(basic.N2.T$PosN2, lambda = seq(0.5, 1, by = 0.1))
which.max(find.lambda$y)
which.max(find.lambda$y)
BCexplore <- bcPower(basic.N2.T$PosN2, lambda = seq(0.5, 1, by = 0.1))
BCexplore <- bcPower(basic.N2.T, lambda = seq(0.5, 1, by = 0.1))
BCexplore <- bcPower(basic.N2.T$PosN2, lambda = seq(0.5, 1, by = 0.1))
BCexplore <- powerTransform(PosN2 ~ Age, basic.N2.T, lambda = seq(0.5, 1, by = 0.1))
bcPower(PosN2, basic.N2.T, lambda = seq(0.5, 1, by = 0.1))
bcPower(basic.N2.T$PosN2, lambda = seq(0.5, 1, by = 0.1))
BCexplore <- bcPower(basic.N2.T$PosN2, lambda = seq(0.5, 1, by = 0.1))
which.max(BCexplore$y)
which.max(BCexplore)
library("MASS")
?boxcox
boxcox(basic.N2.T$PosN2, lambda = seq(0.5, 1, by = 0.1))
boxcox(basic.N2.T, lambda = seq(0.5, 1, by = 0.1))
boxcox(PosN2 ~ Age, data = basic.N2.T,
lambda = seq(0.5, 1, by = 0.1))
BCexplore <- boxcox(PosN2 ~ Age, data = basic.N2.T,
lambda = seq(0.5, 1, by = 0.1))
which.max(BCexplore$y)
bctrans <- boxcox(PosN2 ~ Age, data = basic.N2.T,
lambda = seq(0.5, 1, by = 0.1))
which.max(bctrans$y)
bctrans <- boxcox(PosN2 ~ Age, data = basic.N2.T,
lambda = seq(0.5, 1, by = 0.1))
bctrans <- boxcox(PosN2 ~ Age, data = basic.N2.T,
lambda = seq(0.5, 1, by = 0.1))
which.max(bctrans$y)
bctrans$x[which.max(bctrans$y)]
bctrans$x[bctrans$y = 572]
bctrans <- boxcox(PosN2 ~ Age, data = basic.N2.T,
lambda = seq(-1, 1, by = 0.1))
bctrans <- boxcox(PosN2 ~ Age, data = basic.N2.T,
lambda = seq(-2, 2, by = 0.1))
which.max(bctrans$y)
bctrans$x[which.max(bctrans$y)]
bctrans <- boxcox(PosN2 ~ Age, data = basic.N2.T,
lambda = seq(0, 1, by = 0.1))
use.lambda <- mutate(basic.N2.T,
N2BoxCox = (PosN2 ^ 0.464))
View(use.lambda)
reg4 <- lm(N2BoxCox ~ Age, use.lambda)
par(mfrow = c(2,2))
plot(reg4)
bartlett.test(N2BoxCox ~ Age, use.lambda)
BC.norm.results <- use.lambda %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(N2BoxCox)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
View(BC.norm.results)
BC.norm.results2 <- use.lambda %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(N2BoxCox)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
BC.norm.results <- use.lambda %>%
group_by(Season) %>%
summarise(SW.pvalue = shapiro.test(N2BoxCox)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
View(BC.norm.results)
BC.norm.results3 <- use.lambda %>%
group_by(Habitat) %>%
summarise(SW.pvalue = shapiro.test(N2BoxCox)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
View(BC.norm.results3)
bctrans <- boxcox(PosN2 ~ Age, data = basic.N2.T,
lambda = seq(0, 1, by = 0.1))
hist(use.lambda$N2BoxCox)
qqnorm(use.lambda$N2BoxCox))
qqnorm(use.lambda$N2BoxCox)
qqline(use.lambda$N2BoxCox)
skewness(use.lambda$N2BoxCox)
plot(use.lambda$N2BoxCox)
plot(use.lambda$N2BoxCox, rstandard())
plot(use.lambda$N2BoxCox, rstandard(N2BoxCox ~ Age))
plot(use.lambda$N2BoxCox)
use.lambda <- mutate(basic.N2.T,
N2BoxCox = (((PosN2 ^ 0.464) - 1) / 0.464))
hist(use.lambda$N2BoxCox)
qqline(use.lambda$N2BoxCox)
qqnorm(use.lambda$N2BoxCox)
qqline(use.lambda$N2BoxCox)
plot(use.lambda$N2BoxCox)
reg4 <- lm(N2BoxCox ~ Age, use.lambda)
par(mfrow = c(2,2))
plot(reg4)
bartlett.test(N2BoxCox ~ Age, use.lambda)
BC.norm.results <- use.lambda %>%
group_by(Season) %>%
summarise(SW.pvalue = shapiro.test(N2BoxCox)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
BC.norm.results2 <- use.lambda %>%
group_by(Site) %>%
summarise(SW.pvalue = shapiro.test(N2BoxCox)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
View(BC.norm.results2)
BC.norm.results3 <- use.lambda %>%
group_by(Habitat) %>%
summarise(SW.pvalue = shapiro.test(N2BoxCox)$p.value) %>%
mutate(Result = ifelse(SW.pvalue > 0.05, "Normal", "Non-Normal"))
View(BC.norm.results3)
View(use.lambda)
formula <- y ~ x
View(basic.N2)
p1 <- ggplot(basic.N2, aes(Age, avg_N2Flux, colour = Habitat))
p1 + geom_point() +
geom_smooth(method = "lm", formula = formula, se = F) +
stat_poly_eq(formula = formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
p1 <- ggplot(basic.N2, aes(Age, N2Flux, colour = Habitat))
p1 + geom_point() +
geom_smooth(method = "lm", formula = formula, se = F) +
stat_poly_eq(formula = formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
basic.N2 %>%
ggplot(aes(Age, N2Flux, colour = Habitat)) +
geom_point() +
facet_grid(Season ~ .) +
geom_smooth(method = "lm", formula = formula, se = F) +
stat_poly_eq(formula = formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
basic.N2 %>%
ggplot(aes(Age, N2Flux, colour = CoreName)) +
geom_point() +
facet_grid(Season ~ .) +
geom_smooth(method = "lm", formula = formula, se = F) +
stat_poly_eq(formula = formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
basic.N2 %>%
ggplot(aes(Age, N2Flux, colour = CoreName)) +
geom_point() +
facet_grid(. ~ Season) +
geom_smooth(method = "lm", formula = formula, se = F) +
stat_poly_eq(formula = formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
basic.N2 %>%
ggplot(aes(Age, N2Flux, colour = Habitat)) +
geom_point() +
facet_grid(Site ~ .) +
geom_smooth(method = "lm", formula = formula, se = F) +
stat_poly_eq(formula = formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
basic.N2 %>%
ggplot(aes(Age, N2Flux, colour = Habitat)) +
geom_point() +
facet_grid(Season ~ .) +
geom_smooth(method = "lm", formula = formula, se = F) +
stat_poly_eq(formula = formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
basic.N2 %>%
ggplot(aes(Age, N2Flux, colour = Season)) +
geom_point() +
facet_grid(Habitat ~ .) +
geom_smooth(method = "lm", formula = formula, se = F) +
stat_poly_eq(formula = formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
use.lambda %>%
ggplot(aes(Age, N2BoxCox, colour = Habitat)) +
geom_point() +
facet_grid(Season ~ .) +
geom_smooth(method = "lm", formula = formula, se = F) +
stat_poly_eq(formula = formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
use.lambda %>%
ggplot(aes(Age, N2BoxCox, colour = Season)) +
geom_point() +
facet_grid(Habitat ~ .) +
geom_smooth(method = "lm", formula = formula, se = F) +
stat_poly_eq(formula = formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
p8 <- ggplot(use.lambda, aes(Age, N2BoxCox))
p8 + geom_point()
p8 <- ggplot(use.lambda, aes(Age, N2BoxCox))
p8 + geom_point(aes(colour = Habitat))
p9 <- ggplot(basic.N2, aes(Age, N2Flux))
p9 + geom_point(aes(colour = Habitat))
par(mfrow = (2, 1))
par(mfrow = (2,1))
par(mfrow = c(2,1))
p8 + geom_point(aes(colour = Habitat))
p9 + geom_point(aes(colour = Habitat))
p8 + geom_point(aes(colour = Habitat))
p9 + geom_point(aes(colour = Habitat))
p8 + geom_point(aes(colour = Habitat))
p9 + geom_point(aes(colour = Habitat))
p9 + geom_point(aes(colour = Habitat)) + facet_grid(Season ~ .)
p8 + geom_point(aes(colour = Habitat))
p1 <- ggplot(basic.N2, aes(Age, N2Flux, colour = Habitat))
p1 + geom_point() +
geom_smooth(method = "lm", formula = formula, se = F) +
stat_poly_eq(formula = formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
p1 <- ggplot(use.lambda, aes(Age, N2BoxCox, colour = Habitat))
p1 + geom_point() +
geom_smooth(method = "lm", formula = formula, se = F) +
stat_poly_eq(formula = formula,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = T) +
stat_fit_glance(method = "lm",
geom = "text",
aes(label = paste("P-value =", signif(..p.value.., digits = 4), sep = "")),
label.x.npc = "right")
reg4 <- lm(N2BoxCox ~ Age, use.lambda)
plot(reg4)
reg4 <- lm(N2BoxCox ~ Age, use.lambda)
par(mfrow = c(2,2))
plot(reg4)
season.anova.T <- aov(N2BoxCox ~ Season, data = use.lambda)
summary(season.anova.T)
TukeyHSD(season.anova.T)
habitat.anova.T <- aov(N2BoxCox ~ Habitat, data = use.lambda)
summary(habitat.anova.T)
TukeyHSD(habitat.anova.T)
site.anova.T <- aov(N2BoxCox ~ Site, data = use.lambda)
summary(site.anova.T)
TukeyHSD(site.anova.T)
setwd("E:/R Markdown")
library("plyr")
library("dplyr")
library("ggplot2")
library("ggpmisc")
library("lmtest")
library("car")
library("MASS")
source("functions.R")
all.N2 <- read.csv("N2-flux\\clean\\N2-flux-by-core_with-summer15.csv", header = T, stringsAsFactors = F)
DNE <- read.csv("DNE\\clean\\DNE-clean_no-summer15_all-sites.csv", header = T, stringsAsFactors = F)
all.N2 <- set.factors(all.N2)
all.N2$Habitat <- factor(all.N2$Habitat, levels = c("oyster", "marsh", "Ref", "LoRef", "HiRef"))
all.N2$Age <- as.numeric(all.N2$Age)
DNE <- set.factors.basic(DNE)
DNE <- na.omit(DNE)
write.csv("PRIMER\\clean\\N2_BoxCoxTransform.csv", row.names = F)
write.csv(use.lambda, "PRIMER\\clean\\N2_BoxCoxTransform.csv", row.names = F)
basic.N2.T <- mutate(basic.N2,
PosN2 = N2Flux + 21,
SquareRtN2 = sqrt(N2Flux + 21),
logN2 = log(N2Flux + 21, 10))
no.summer15 <- all.N2[!all.N2$Season == "Summer15", ]
#Eliminate LoRef and HiRef
basic.N2 <- no.summer15[!no.summer15$Habitat == "LoRef", ]
basic.N2 <- basic.N2[!basic.N2$Habitat == "HiRef", ]
#Calculate summary stats based on core type
type.basic.N2 <- full.summary(basic.N2)
basic.N2.T <- mutate(basic.N2,
PosN2 = N2Flux + 21,
SquareRtN2 = sqrt(N2Flux + 21),
logN2 = log(N2Flux + 21, 10))
bctrans <- boxcox(PosN2 ~ Age, data = basic.N2.T,
lambda = seq(0, 1, by = 0.1))
which.max(bctrans$y)
use.lambda <- mutate(basic.N2.T,
N2BoxCox = (((PosN2 ^ 0.464) - 1) / 0.464))
write.csv(use.lambda, "PRIMER\\clean\\N2_BoxCoxTransform.csv", row.names = F)
use.lambda.type <- ddply(use.lambda, summarise,
Avg_N2BC = mean(N2BoxCox))
ddply
View(use.lambda)
use.lambda.type <- ddply(use.lambda, c("Season", "Site", "CoreName"), summarise,
Avg_N2BC = mean(N2BoxCox))
View(use.lambda.type)
use.lambda.type <- add.habitat(use.lambda.type)
use.lambda.type <- add.age(use.lambda.type)
use.lambda.type$Age <- as.numeric(use.lambda.type$Age)
str(use.lambda.type)
use.lambda.type <- ddply(use.lambda, c("Season", "Site", "CoreName", "Habitat", "Age"), summarise,
Avg_N2BC = mean(N2BoxCox))
write.csv(use.lambda.type, "PRIMER\\clean\\N2_BoxCoxTransform-by-type.csv", row.names = F)
