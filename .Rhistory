View(oyster.age)
age.axis <- function(x){
mutate(x, Years = ifelse(Site == "IMS" , "0 years",
ifelse(Site == "Carrot", "2 years",
ifelse(Site == "NOAA", "7 years", "20 years"))))
return(x)
x$Years <- factor(x$Years, levels = c("0 years", "2 years", "7 years", "20 years"))
}
oyster.age <- age.axis(filtration)
View(oyster.age)
age.axis <- function(x){
mutate(x, Years = ifelse(Site == "IMS" , "0 years",
ifelse(Site == "Carrot", "2 years",
ifelse(Site == "NOAA", "7 years", "20 years"))))
return(x)
}
oyster.age <- age.axis(filtration)
View(oyster.age)
age.axis <- function(x){
changed <- mutate(x, Years = ifelse(Site == "IMS" , "0 years",
ifelse(Site == "Carrot", "2 years",
ifelse(Site == "NOAA", "7 years", "20 years"))))
changed$Years <- factor(changed$Years, levels = c("0 years", "2 years", "7 years", "20 years"))
return(changed)
}
oyster.age <- age.axis(filtration)
View(oyster.age)
str(oyster.age)
oyster.age %>%
ggplot(aes(Site, filtration, fill = Season)) +
geom_bar(stat = "identity", position = "dodge") +
xlab(NULL) +
ylab(expression(paste("Oyster filtration (L", "  ", m^-2, " ", h^-1, ")"))) +
geom_hline(yintercept = 0, size = 0.5, colour = "black") +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "gray 70", size = 0.5),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 26, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20),
legend.title = element_text(size = 23, face = "bold"),
legend.text = element_text(size = 20)) +
geom_hline(yintercept = 0, size = 0.8, colour = "black") +
scale_fill_manual(values = c("darkgoldenrod1", "darkred", "darkblue", "darkgreen"),
labels = c("  Summer",
"  Fall",
"  Winter",
"  Spring"))
oyster.age %>%
ggplot(aes(Years, filtration, fill = Season)) +
geom_bar(stat = "identity", position = "dodge") +
xlab(NULL) +
ylab(expression(paste("Oyster filtration (L", "  ", m^-2, " ", h^-1, ")"))) +
geom_hline(yintercept = 0, size = 0.5, colour = "black") +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "gray 70", size = 0.5),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 26, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20),
legend.title = element_text(size = 23, face = "bold"),
legend.text = element_text(size = 20)) +
geom_hline(yintercept = 0, size = 0.8, colour = "black") +
scale_fill_manual(values = c("darkgoldenrod1", "darkred", "darkblue", "darkgreen"),
labels = c("  Summer",
"  Fall",
"  Winter",
"  Spring"))
oyster.age %>%
ggplot(aes(Years, filtration, fill = Season)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Restored age") +
ylab(expression(paste("Oyster filtration (L", "  ", m^-2, " ", h^-1, ")"))) +
geom_hline(yintercept = 0, size = 0.5, colour = "black") +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "gray 70", size = 0.5),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 26, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20),
legend.title = element_text(size = 23, face = "bold"),
legend.text = element_text(size = 20)) +
geom_hline(yintercept = 0, size = 0.8, colour = "black") +
scale_fill_manual(values = c("darkgoldenrod1", "darkred", "darkblue", "darkgreen"),
labels = c("  Summer",
"  Fall",
"  Winter",
"  Spring"))
oyster.age %>%
ggplot(aes(Years, filtration, fill = Season)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Restored age") +
ylab(expression(paste("Oyster filtration (L", "  ", m^-2, " ", h^-1, ")"))) +
geom_hline(yintercept = 0, size = 0.5, colour = "black") +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.title.x = element_text(margin = margin(r = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "gray 70", size = 0.5),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20),
legend.title = element_text(size = 23, face = "bold"),
legend.text = element_text(size = 20)) +
geom_hline(yintercept = 0, size = 0.8, colour = "black") +
scale_fill_manual(values = c("darkgoldenrod1", "darkred", "darkblue", "darkgreen"),
labels = c("  Summer",
"  Fall",
"  Winter",
"  Spring"))
oyster.age %>%
ggplot(aes(Years, filtration, fill = Season)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Restored age") +
ylab(expression(paste("Oyster filtration (L", "  ", m^-2, " ", h^-1, ")"))) +
geom_hline(yintercept = 0, size = 0.5, colour = "black") +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.title.x = element_text(margin = margin(r = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "gray 70", size = 0.5),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20),
legend.title = element_text(size = 23, face = "bold"),
legend.text = element_text(size = 20)) +
geom_hline(yintercept = 0, size = 0.8, colour = "black") +
scale_fill_manual(values = c("darkgoldenrod1", "darkred", "darkblue", "darkgreen"),
labels = c("  Summer",
"  Fall",
"  Winter",
"  Spring"))
oyster.age %>%
ggplot(aes(Years, filtration, fill = Season)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Restored age") +
ylab(expression(paste("Oyster filtration (L", "  ", m^-2, " ", h^-1, ")"))) +
geom_hline(yintercept = 0, size = 0.5, colour = "black") +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "gray 70", size = 0.5),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20),
legend.title = element_text(size = 23, face = "bold"),
legend.text = element_text(size = 20)) +
geom_hline(yintercept = 0, size = 0.8, colour = "black") +
scale_fill_manual(values = c("darkgoldenrod1", "darkred", "darkblue", "darkgreen"),
labels = c("  Summer",
"  Fall",
"  Winter",
"  Spring"))
tiff("Figures\\Thesis\\Oyster-filtration-by-Season", width = 300, height = 250, units = "mm", res = 300, compression = "lzw")
oyster.age %>%
ggplot(aes(Years, filtration, fill = Season)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Restored age") +
ylab(expression(paste("Oyster filtration (L", "  ", m^-2, " ", h^-1, ")"))) +
geom_hline(yintercept = 0, size = 0.5, colour = "black") +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "gray 70", size = 0.5),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20),
legend.title = element_text(size = 23, face = "bold"),
legend.text = element_text(size = 20)) +
geom_hline(yintercept = 0, size = 0.8, colour = "black") +
scale_fill_manual(values = c("darkgoldenrod1", "darkred", "darkblue", "darkgreen"),
labels = c("  Summer",
"  Fall",
"  Winter",
"  Spring"))
dev.off()
View(stem.density)
stem.density.age <- age.axis(stem.density)
str(stem.density.age)
stem.density.age %>%
ggplot(aes(Years, adj_density)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge")
stem.density.age %>%
ggplot(aes(Years, adj_density)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge") +
xlab("Restored age") +
ylab(expression(paste("Stem density (stems", "  ", m^-2, ")"))) +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20))
stem.density.age %>%
ggplot(aes(Years, adj_density, fill = "darkgreen")) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge") +
xlab("Restored age") +
ylab(expression(paste("Stem density (stems", "  ", m^-2, ")"))) +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20))
stem.density.age %>%
ggplot(aes(Years, adj_density, fill = darkgreen)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge") +
xlab("Restored age") +
ylab(expression(paste("Stem density (stems", "  ", m^-2, ")"))) +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20))
stem.density.age %>%
ggplot(aes(Years, adj_density)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge", fill = "darkgreen") +
xlab("Restored age") +
ylab(expression(paste("Stem density (stems", "  ", m^-2, ")"))) +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20))
stem.density.age %>%
ggplot(aes(Years, adj_density)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge", fill = "darkgreen") +
xlab("Restored age") +
ylab(expression(paste(italic("S. alterniflora")), "density (stems", "  ", m^-2, ")"))) +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20))
stem.density.age %>%
ggplot(aes(Years, adj_density)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge", fill = "darkgreen") +
xlab("Restored age") +
ylab(expression(paste(italic("S. alterniflora")), "density (stems", "  ", m^-2, ")")) +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20))
stem.density.age %>%
ggplot(aes(Years, adj_density)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge", fill = "darkgreen") +
xlab("Restored age") +
ylab(expression(paste(italic("S. alterniflora"), "density (stems", "  ", m^-2, ")"))) +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20))
stem.density.age %>%
ggplot(aes(Years, adj_density)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge", fill = "darkgreen") +
xlab("Restored age") +
ylab(expression(paste(italic("S. alterniflora"), " density (stems", "  ", m^-2, ")"))) +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20))
tiff("Figures\\Thesis\\Stem-density-by-Site", width = 300, height = 250, units = "mm", res = 300, compression = "lzw")
stem.density.age %>%
ggplot(aes(Years, adj_density)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge", fill = "darkgreen") +
xlab("Restored age") +
ylab(expression(paste(italic("S. alterniflora"), " density (stems", "  ", m^-2, ")"))) +
theme(panel.background = element_rect(fill = "grey97", colour = "black"),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.line.y = element_line(colour = "black", size = 0.8),
axis.line.x = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
strip.text = element_text(size = 20))
dev.off()
annual.data <- read.csv("PRIMER\\raw\\annual-data_all-seasons_all-sites.csv", header = T, stringsAsFactors = F)
View(annual.data)
annual <- read.csv("combined-data\\clean\\annual-params_all-seasons_all-sites.csv", header = T)
View(annual)
library("plyr")
library("dplyr")
library("ggplot2")
library("ggpmisc")
source("functions.R")
annual <- read.csv("combined-data\\clean\\annual-params_all-seasons_all-sites.csv", header = T)
View(annual)
str(annual)
DNE <- read.csv("combined-data\\clean\\DNE-prepped-for-graphing_all-seasons_all-sites.csv", header = T)
View(DNE)
#Convert Ref label to sandflat in annual dataset
annual.sandflat <- add.sandflat(annual)
annual.sandflat <- set.factors(annual.sandflat)
annual.sandflat$Habitat <- factor(annual.sandflat$Habitat, levels = c("oyster", "marsh", "sandflat"))
#Avering SOD, SOM, and inundation for each habitat type per season & site
habitat.avgs <- ddply(annual.sandflat, .(Season, Site, Habitat), summarise,
avg_N2flux = mean(N2flux),
avg_inund = mean(Inund),
avg_SOM = mean(SOM),
avg_SOD = mean(SOD),
avg_O2conc = mean(O2conc),
avg_NOxflux = mean(NOxflux),
avg_NH3 = mean(NH3flux))
habitat.avgs <- set.factors.habitat(habitat.avgs)
View(habitat.avgs)
View(annual)
View(habitat.avgs)
View(annual)
str(annual)
annual %>%
ggplot(aes(O2conc, N2flux, colour = Season)) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
geom_point(size = 4) +
theme(panel.background = element_rect(fill = "white", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 20, colour = "black"),
axis.text.y = element_text(size = 20, colour = "black"),
legend.title = element_text(size = 23, face = "bold"),
legend.text = element_text(size = 20)) +
xlab(expression(paste(" Average ", O[2], " concentration (mg ", O[2], " ", L^-1, ")"))) +
ylab(expression(paste("Average ", N[2], " flux (", mu, "mol N ", m^2, " ", h^-1, ")"))) +
#coord_cartesian(ylim = c(-10, 120)) +
#scale_y_continuous(breaks = seq(-20, 120, 20)) +
scale_colour_manual(values = c("darkgoldenrod1", "darkred", "darkblue", "darkgreen"),
labels = c("  Summer",
"  Fall",
"  Winter",
"  Spring"))
str(annual)
annual.sandflat <- add.sandflat(annual)
annual.sandflat <- set.factors(annual.sandflat)
annual.sandflat$Habitat <- factor(annual.sandflat$Habitat, levels = c("oyster", "marsh", "sandflat"))
View(annual.sandflat)
str(annual.sandflat)
annual.sandflat %>%
ggplot(aes(O2conc, N2flux, colour = Season)) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
geom_point(size = 4) +
theme(panel.background = element_rect(fill = "white", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.line.x = element_line(colour = "black", size = 0.8),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 20, colour = "black"),
axis.text.y = element_text(size = 20, colour = "black"),
legend.title = element_text(size = 23, face = "bold"),
legend.text = element_text(size = 20)) +
xlab(expression(paste(" Average ", O[2], " concentration (mg ", O[2], " ", L^-1, ")"))) +
ylab(expression(paste("Average ", N[2], " flux (", mu, "mol N ", m^2, " ", h^-1, ")"))) +
#coord_cartesian(ylim = c(-10, 120)) +
#scale_y_continuous(breaks = seq(-20, 120, 20)) +
scale_colour_manual(values = c("darkgoldenrod1", "darkred", "darkblue", "darkgreen"),
labels = c("  Summer",
"  Fall",
"  Winter",
"  Spring"))
annual.sandflat %>%
ggplot(aes(O2conc, N2flux, colour = Season)) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
geom_point(size = 4) +
theme(panel.background = element_rect(fill = "white", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.line.x = element_line(colour = "grey23", size = 0.5),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 20, colour = "black"),
axis.text.y = element_text(size = 20, colour = "black"),
legend.title = element_text(size = 23, face = "bold"),
legend.text = element_text(size = 20)) +
xlab(expression(paste(" Average ", O[2], " concentration (mg ", O[2], " ", L^-1, ")"))) +
ylab(expression(paste("Average ", N[2], " flux (", mu, "mol N ", m^2, " ", h^-1, ")"))) +
geom_hline(yintercept = 0, size = 0.8, colour = "black")
#coord_cartesian(ylim = c(-10, 120)) +
#scale_y_continuous(breaks = seq(-20, 120, 20)) +
scale_colour_manual(values = c("darkgoldenrod1", "darkred", "darkblue", "darkgreen"),
labels = c("  Summer",
"  Fall",
"  Winter",
"  Spring"))
annual.sandflat %>%
ggplot(aes(O2conc, N2flux, colour = Season)) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
geom_point(size = 4) +
theme(panel.background = element_rect(fill = "white", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.line.x = element_line(colour = "grey23", size = 0.5),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 20, colour = "black"),
axis.text.y = element_text(size = 20, colour = "black"),
legend.title = element_text(size = 23, face = "bold"),
legend.text = element_text(size = 20)) +
xlab(expression(paste(" Average ", O[2], " concentration (mg ", O[2], " ", L^-1, ")"))) +
ylab(expression(paste("Average ", N[2], " flux (", mu, "mol N ", m^2, " ", h^-1, ")"))) +
geom_hline(yintercept = 0, size = 0.8, colour = "black") +
#coord_cartesian(ylim = c(-10, 120)) +
#scale_y_continuous(breaks = seq(-20, 120, 20)) +
scale_colour_manual(values = c("darkgoldenrod1", "darkred", "darkblue", "darkgreen"),
labels = c("  Summer",
"  Fall",
"  Winter",
"  Spring"))
annual.sandflat %>%
ggplot(aes(O2conc, N2flux, colour = Season)) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
geom_point(size = 4) +
theme(panel.background = element_rect(fill = "white", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.line.x = element_line(colour = "grey23", size = 0.5),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 20, colour = "black"),
axis.text.y = element_text(size = 20, colour = "black"),
legend.title = element_text(size = 23, face = "bold"),
legend.text = element_text(size = 20)) +
xlab(expression(paste(" Average ", O[2], " concentration (mg ", O[2], " ", L^-1, ")"))) +
ylab(expression(paste("Average ", N[2], " flux (", mu, "mol N ", m^-2, " ", h^-1, ")"))) +
geom_hline(yintercept = 0, size = 0.8, colour = "black") +
#coord_cartesian(ylim = c(-10, 120)) +
#scale_y_continuous(breaks = seq(-20, 120, 20)) +
scale_colour_manual(values = c("darkgoldenrod1", "darkred", "darkblue", "darkgreen"),
labels = c("  Summer",
"  Fall",
"  Winter",
"  Spring"))
tiff("Figures\\Thesis\\N2-flux-by-O2-conc", width = 300, height = 200, units = "mm", res = 300, compression = "lzw")
annual.sandflat %>%
ggplot(aes(O2conc, N2flux, colour = Season)) +
geom_hline(yintercept = 0, size = 0.2, colour = "grey23") +
geom_vline(xintercept = 0, size = 0.2, colour = "grey23") +
geom_point(size = 4) +
theme(panel.background = element_rect(fill = "white", colour = NA),
axis.title.x = element_text(margin = margin(t = 15), size = 26),
axis.title.y = element_text(margin = margin(r = 15), size = 26),
axis.line.x = element_line(colour = "grey23", size = 0.5),
axis.line.y = element_line(colour = "black", size = 0.8),
panel.grid.major = element_line(colour = "grey70", size = 0.25),
axis.text.x = element_text(size = 20, colour = "black"),
axis.text.y = element_text(size = 20, colour = "black"),
legend.title = element_text(size = 23, face = "bold"),
legend.text = element_text(size = 20)) +
xlab(expression(paste(" Average ", O[2], " concentration (mg ", O[2], " ", L^-1, ")"))) +
ylab(expression(paste("Average ", N[2], " flux (", mu, "mol N ", m^-2, " ", h^-1, ")"))) +
geom_hline(yintercept = 0, size = 0.8, colour = "black") +
#coord_cartesian(ylim = c(-10, 120)) +
#scale_y_continuous(breaks = seq(-20, 120, 20)) +
scale_colour_manual(values = c("darkgoldenrod1", "darkred", "darkblue", "darkgreen"),
labels = c("  Summer",
"  Fall",
"  Winter",
"  Spring"))
dev.off()
View(annual.sandflat)
